<!-- Custom Image Grids -->
<section class="image-grids-animation">
  <div class="container">
    <div class="image-grid-row">
      <div class="column" data-mobile-img="{{ section.settings.grid_mobile_1 | img_url: 'original' }}">
        <div class="column-content">
          <img src="{{ section.settings.extended_image_1 | img_url: 'original' }}" width="394" height="555" class="extendedImage" alt="grid image" />
          <span class="image-grid-title font-neue-roman text-light">{{ section.settings.img_tag_1 }}</span>
          <button class="openImage-btn">
            <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                <rect width="36" height="36" rx="18" fill="#F9F6F3"/>
                <path d="M17.7167 12L17.7167 25M11 18.5H17.7167H24" stroke="#292521" stroke-width="1.5"/>
            </svg>
          </button>
          <div class="content">
            <h2 class="text-light font-neue-light">{{ section.settings.img_heading1 }} <br><span class="font-austin-italic">{{ section.settings.img_italic_heading1 }}</span></h2>
            <p class="text-light font-neue-roman">{{ section.settings.img_content1 | slice: 0, 89 }}</p>
            <a class="learn-more-arrow btn-light font-neue-roman" href="{{ section.settings.img_learnmore1 }}">
            Learn More 
              <svg width="20" height="12" viewBox="0 0 20 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M0 6.1873H18.0582H0Z" fill="#292521"/>
                  <path d="M12.5345 1L18.0582 6.1873L12.5345 1Z" fill="#292521"/>
                  <path d="M12.5345 11.41L18.0582 6.1873L12.5345 11.41Z" fill="#292521"/>
                  <path d="M0 6.1873H18.0582M18.0582 6.1873L12.5345 1M18.0582 6.1873L12.5345 11.41" stroke="#292521" stroke-width="1.5" stroke-miterlimit="10"/>
              </svg>
            </a>
            <button class="close-btn">
              <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                <rect width="36" height="36" rx="18" fill="#F9F6F3"/>
                <path d="M13.057 13.7506L22.2494 22.943M12.9038 23.0962L17.6532 18.3468L22.0962 13.9038" stroke="#292521" stroke-width="1.5"/>
              </svg>
            </button>
          </div>
        </div>
      </div>
      <div class="column" data-mobile-img="{{ section.settings.grid_mobile_2 | img_url: 'original' }}">
        <div class="column-content">
          <img src="{{ section.settings.extended_image_2 | img_url: 'original' }}" width="394" height="555" class="extendedImage" alt="grid image" />
          <span class="image-grid-title font-neue-roman text-light">{{ section.settings.img_tag_2 }}</span>
          <button class="openImage-btn">
            <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                <rect width="36" height="36" rx="18" fill="#F9F6F3"/>
                <path d="M17.7167 12L17.7167 25M11 18.5H17.7167H24" stroke="#292521" stroke-width="1.5"/>
            </svg>
          </button>
          <div class="content">
            <h2 class="text-light font-neue-light">{{ section.settings.img_heading2 }} <br><span class="font-austin-italic">{{ section.settings.img_italic_heading2 }}</span></h2>
            <p class="text-light font-neue-roman">{{ section.settings.img_content2 | slice: 0, 89 }}</p>
            <a class="learn-more-arrow btn-light font-neue-roman" href="{{ section.settings.img_learnmore2 }}">
              Learn More
              <svg width="20" height="12" viewBox="0 0 20 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M0 6.1873H18.0582H0Z" fill="#292521"/>
                  <path d="M12.5345 1L18.0582 6.1873L12.5345 1Z" fill="#292521"/>
                  <path d="M12.5345 11.41L18.0582 6.1873L12.5345 11.41Z" fill="#292521"/>
                  <path d="M0 6.1873H18.0582M18.0582 6.1873L12.5345 1M18.0582 6.1873L12.5345 11.41" stroke="#292521" stroke-width="1.5" stroke-miterlimit="10"/>
              </svg>
            </a>
            <button class="close-btn">
              <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                <rect width="36" height="36" rx="18" fill="#F9F6F3"/>
                <path d="M13.057 13.7506L22.2494 22.943M12.9038 23.0962L17.6532 18.3468L22.0962 13.9038" stroke="#292521" stroke-width="1.5"/>
              </svg>
            </button>
          </div>
        </div>
      </div>
      <div class="column" data-mobile-img="{{ section.settings.grid_mobile_3 | img_url: 'original' }}">
        <div class="column-content">
          <img src="{{ section.settings.extended_image_3 | img_url: 'original' }}" width="394" height="555" class="extendedImage" alt="grid image" />
          <span class="image-grid-title font-neue-roman text-light">{{ section.settings.img_tag_3 }}</span>
          <button class="openImage-btn">
            <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                <rect width="36" height="36" rx="18" fill="#F9F6F3"/>
                <path d="M17.7167 12L17.7167 25M11 18.5H17.7167H24" stroke="#292521" stroke-width="1.5"/>
            </svg>
          </button>
          <div class="content">
            <h2 class="text-light font-neue-light">{{ section.settings.img_heading3 }} <br><span class="font-austin-italic">{{ section.settings.img_italic_heading3 }}</span></h2>
            <p class="text-light font-neue-roman">{{ section.settings.img_content3 | slice: 0, 89 }}</p>
            <a class="learn-more-arrow btn-light font-neue-roman" href="{{ section.settings.img_learnmore3 }}">
              Learn More
              <svg width="20" height="12" viewBox="0 0 20 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M0 6.1873H18.0582H0Z" fill="#292521"/>
                  <path d="M12.5345 1L18.0582 6.1873L12.5345 1Z" fill="#292521"/>
                  <path d="M12.5345 11.41L18.0582 6.1873L12.5345 11.41Z" fill="#292521"/>
                  <path d="M0 6.1873H18.0582M18.0582 6.1873L12.5345 1M18.0582 6.1873L12.5345 11.41" stroke="#292521" stroke-width="1.5" stroke-miterlimit="10"/>
              </svg>
            </a>
            <button class="close-btn">
              <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                <rect width="36" height="36" rx="18" fill="#F9F6F3"/>
                <path d="M13.057 13.7506L22.2494 22.943M12.9038 23.0962L17.6532 18.3468L22.0962 13.9038" stroke="#292521" stroke-width="1.5"/>
              </svg>
            </button>
          </div>
        </div>
      </div>
      <div class="column" data-mobile-img="{{ section.settings.grid_mobile_4 | img_url: 'original' }}">
        <div class="column-content">
          <img src="{{ section.settings.extended_image_4 | img_url: 'original' }}" width="394" height="555" class="extendedImage" alt="grid image" />
          <span class="image-grid-title font-neue-roman text-light">{{ section.settings.img_tag_4 }}</span>
          <button class="openImage-btn">
            <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                <rect width="36" height="36" rx="18" fill="#F9F6F3"/>
                <path d="M17.7167 12L17.7167 25M11 18.5H17.7167H24" stroke="#292521" stroke-width="1.5"/>
            </svg>
          </button>
          <div class="content">
            <h2 class="text-light font-neue-light">{{ section.settings.img_heading4 }} <br><span class="font-austin-italic">{{ section.settings.img_italic_heading4 }}</span></h2>
            <p class="text-light font-neue-roman">{{ section.settings.img_content4 | slice: 0, 89 }}</p>
            <a class="learn-more-arrow btn-light font-neue-roman" href="{{ section.settings.img_learnmore4 }}">
              Learn More
              <svg width="20" height="12" viewBox="0 0 20 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M0 6.1873H18.0582H0Z" fill="#292521"/>
                  <path d="M12.5345 1L18.0582 6.1873L12.5345 1Z" fill="#292521"/>
                  <path d="M12.5345 11.41L18.0582 6.1873L12.5345 11.41Z" fill="#292521"/>
                  <path d="M0 6.1873H18.0582M18.0582 6.1873L12.5345 1M18.0582 6.1873L12.5345 11.41" stroke="#292521" stroke-width="1.5" stroke-miterlimit="10"/>
              </svg>
            </a>
            <button class="close-btn">
              <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                <rect width="36" height="36" rx="18" fill="#F9F6F3"/>
                <path d="M13.057 13.7506L22.2494 22.943M12.9038 23.0962L17.6532 18.3468L22.0962 13.9038" stroke="#292521" stroke-width="1.5"/>
              </svg>
            </button>
          </div>
        </div>
      </div>
    </div>

    <div class="progress-bar">
      <div class="progress"></div>
    </div>

    <div class="carousel-controls">
      <button id="prev-btn" class="prevslide-btn disabled">
        <svg id="Layer_2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 19.04 11.49">
            <defs>
                <style>.cls-1{stroke-miterlimit:5;}.cls-1,.cls-2{fill:none;stroke:#000;stroke-width:1.5px;}.cls-2{stroke-linejoin:round;}</style>
            </defs>
            <g id="Layer_2-2">
                <polyline class="cls-1" points="6.59 .54 1.09 5.74 6.59 10.94"/>
                <line class="cls-2" x1="19.04" y1="5.74" x2="1.09" y2="5.74"/>
            </g>
        </svg>
      </button>
      <button id="next-btn" class="nextslide-btn">
        <svg id="Layer_2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 19.04 11.49">
            <defs>
                <style>.cls-1{stroke-miterlimit:5;}.cls-1,.cls-2{fill:none;stroke:#000;stroke-width:1.5px;}.cls-2{stroke-linejoin:round;}</style>
            </defs>
            <g id="Layer_2-2">
                <polyline class="cls-1" points="12.45 .54 17.95 5.74 12.45 10.94"/>
                <line class="cls-2" y1="5.74" x2="17.95" y2="5.74"/>
            </g>
        </svg>
      </button>
    </div>
      
    <h2 class="section-center-heading font-neue-light">{{ section.settings.bottom_main_heading }} <span class="font-austin-italic">{{ section.settings.bottom_main_heading_italic }}</span></h2>
    <div class="text-flexbox">
      <div class="flex-text-left">
        <h3 class="font-neue-light">{{ section.settings.bottom_text_left }} <br><span class="font-austin-italic">{{ section.settings.bottom_text_left_italic }}</span></h3>
      </div>
      <div class="flex-text-right">
        <p class="font-neue-roman">{{ section.settings.bottom_text_right }}</p>
      </div>
    </div>
  </div>
</section>

<!-- Modal Structure -->
<div id="imageGridModal" class="modal">
  <div class="modal-content">
    <div class="modal-body">
      <span class="image-grid-title modals-tags font-neue-roman text-light"></span>
      <img id="modal-image" src="" width="600" height="849" alt="modal image" class="modal-image"/>
      <div class="modal-contentarea">
        <h2 class="modal-title font-neue-light"></h2>
        <p class="modal-text font-neue-roman"></p>
        <a class="modal-link btn-light font-neue-roman" href="#">
          Learn More
          <svg id="Layer_2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 19.04 11.49">
              <defs>
                  <style>.cls-1{stroke-miterlimit:5;}.cls-1,.cls-2{fill:none;stroke:#000;stroke-width:1.5px;}.cls-2{stroke-linejoin:round;}</style>
              </defs>
              <g id="Layer_2-2">
                  <polyline class="cls-1" points="12.45 .54 17.95 5.74 12.45 10.94"/>
                  <line class="cls-2" y1="5.74" x2="17.95" y2="5.74"/>
              </g>
          </svg>
        </a>
      </div>
    </div>
    
  </div>
  <div class="modal-action-btns">
    <button id="prev-modal-btn">
      <svg id="Layer_2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 19.04 11.49">
          <defs>
              <style>.cls-1{stroke-miterlimit:5;}.cls-1,.cls-2{fill:none;stroke:#000;stroke-width:1.5px;}.cls-2{stroke-linejoin:round;}</style>
          </defs>
          <g id="Layer_2-2">
              <polyline class="cls-1" points="6.59 .54 1.09 5.74 6.59 10.94"/>
              <line class="cls-2" x1="19.04" y1="5.74" x2="1.09" y2="5.74"/>
          </g>
      </svg>
    </button>
    <button id="next-modal-btn">
      <svg id="Layer_2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 19.04 11.49">
          <defs>
              <style>.cls-1{stroke-miterlimit:5;}.cls-1,.cls-2{fill:none;stroke:#000;stroke-width:1.5px;}.cls-2{stroke-linejoin:round;}</style>
          </defs>
          <g id="Layer_2-2">
              <polyline class="cls-1" points="12.45 .54 17.95 5.74 12.45 10.94"/>
              <line class="cls-2" y1="5.74" x2="17.95" y2="5.74"/>
          </g>
      </svg>
    </button>
  </div>
  <button id="close-modal-btn">
    <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
      <rect width="36" height="36" rx="18" fill="#F9F6F3"/>
      <path d="M13.057 13.7506L22.2494 22.943M12.9038 23.0962L17.6532 18.3468L22.0962 13.9038" stroke="#292521" stroke-width="1.5"/>
    </svg>
  </button>
</div>



<style type="text/css">
/* Modal Styles */
.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  z-index: 9999;
  justify-content: center;
  align-items: center;
  overflow-y: auto;
}

.modal-content {
    background-color: #f3f0ea;
    padding: 0px;
    width: 100%;
    max-width: 600px;
    margin: auto;
    position: relative;
    height: 100%;
}

img#modal-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top center;
    position: absolute;
    left: 0px;
    top: 0px;
}

.image-grids-animation .learn-more-arrow{
  background-color: rgba(249, 246, 243, 1) !important;
}

.image-grids-animation .learn-more-arrow:hover{
  background-color: rgba(41, 37, 33, 1) !important;
}

.column.active span.image-grid-title {
    opacity: 1;
    visibility: visible;
}


.modal-body {
  text-align: center;
  height: 100%;
  display: flex;
  flex-flow: column;
  justify-content: flex-end;
}

h2.modal-title {
    font-size: 40px;
    line-height: 42px;
    color: rgba(249, 246, 243, 1);
    margin-bottom: 16px;
}

p.modal-text {
    font-size: 16px;
    line-height: 26px;
    color: rgba(249, 246, 243, 1);
    margin-bottom: 21px;
}

.modal-contentarea {
    padding: 20px 20px 94px;
    text-align: left;
    position: relative;
    z-index: 2;
}

#close-modal-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  background: none;
  border: none;
}

a.modal-link.btn-light {
    display: flex;
    align-items: center;
    gap: 0px 10px;
    width: max-content;
    max-width: 100%;
    min-width: 180px;
}

a.modal-link.btn-light svg{
  width: 18.06px;
}

a.modal-link.btn-light:hover svg .cls-1, 
a.modal-link.btn-light:hover svg .cls-2{
  stroke: rgba(249, 246, 243, 1) !important;
}

.container {
  width: 1215px;
  max-width: 100%;
  margin: 0 auto;
}
.custom-modal{
  display: none;
}
section.image-grids-animation .container {
    padding: 0px;
}
.image-grid-row{
  display: flex;
  position: relative;
  overflow: hidden;
  top: -134px;
  gap: 0px 17px;
  transition: transform 0.5s ease;
  /* overscroll-behavior-y: contain;
  touch-action: pan-x; */
}

.progress-bar{
  display: none;
}
.image-grids-animation .column {
  width: 25%;
  margin: 0;
  transition: 0.5s all;
  position: relative;
  box-sizing: border-box;
  height: 410px;
  z-index: 5;
  border-radius: 8px;
}

.image-grids-animation .column img {
  width: 100%;
  cursor: pointer;
  object-fit: cover;
}

.column .content {
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.5s ease, visibility 0.5s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: transparent;
    padding: 20px;
    box-sizing: border-box;
    display: flex;
    align-items: flex-start;
    justify-content: flex-end;
    z-index: 1;
    flex-flow: column;
    flex-wrap: wrap;
}

.column.active .column-content {
  z-index: 9;
  width: calc(200% + 17px);
}

.column.active {
    z-index: 9;
}

.column.active:last-child .column-content {
  right: 0;
}

.column.active:not(:last-child) .column-content {
  left: 0;
}

.column:not(:last-child) .column-content {
  left: 0;
}

.column-content {
  transition: width 0.5s ease, transform 0.5s ease;
  width: 100%;
  position: absolute;
  height: 100%;
  border-radius: 8px;
}

.column:last-child .column-content {
    right: 0px;
}

.column.active .content {
  opacity: 1;
  visibility: visible;
}

.close-btn,
.openImage-btn {
  position: absolute;
  top: 19px;
  right: 19px;
  background: none;
  border: none;
  cursor: pointer;
  z-index: 1;
  padding: 0px;
}

.openImage-btn{
  opacity: 0;
  visibility: hidden;
  transition: 0.3s all;
}

.image-grids-animation .column:hover .openImage-btn{
  opacity: 1;
  visibility: visible;
}

.clickedNextElement{
  z-index: -1;
}

span.image-grid-title {
    position: absolute;
    top: 19px;
    left: 19px;
    padding: 6.5px 20px;
    border-radius: 80px;
    font-size: 13px;
    line-height: 23px;
    z-index: 1;
    opacity: 0;
    visibility: hidden;
    transition: 0.3s all;
    background-color: rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    color: #F9F6F3;
}

.image-grid-row .column:hover span.image-grid-title{
  opacity: 1;
  visibility: visible;
}

.image-grids-animation .column:nth-child(2) span.image-grid-title:before {
    background-color: rgba(41, 37, 33, 0.36);
}

.image-grids-animation .column:nth-child(2) span.image-grid-title{
  color: rgba(249, 246, 243, 1);
}

span.image-grid-title:before {
    content: '';
    background: linear-gradient(90deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.2));
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0px;
    top: 0px;
    border-radius: 80px;
    z-index: -1;
    display: block;
    background-color: rgba(41, 37, 33, 0.36);
}

.extendedImage {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  border-radius: 8px;
  object-position: right;
  {% comment %} transition: 0.5s all; {% endcomment %}
}

.column.active .extendedImage {
  object-position: right;
}

section.image-grids-animation {
    background-color: rgba(41, 37, 33, 1);
    margin-top: 134px;
}

h2.section-center-heading {
    font-size: 5.556vw;
    line-height: 6.111vw;
    text-align: center;
    color: rgba(239, 235, 230, 1);
    margin: 0px;
}

h2.section-center-heading span{
  line-height: 4.653vw;
}

.font-austin-italic{
  font-style: italic;
  font-family: 'Austin';
  font-weight: 350;
}

.text-flexbox {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 0px 118px;
    padding-top: 6.944vw;
    width: 100%;
    padding-left: 60px;
    padding-right: 60px;
}

.flex-text-left {
    width: 540px;
    min-width: 540px;
    max-width: 100%;
}

.flex-text-left h3 {
    margin: 0px;
    font-size: 4.167vw;
    color: rgba(239, 235, 230, 1);
    line-height: 4.653vw;
}

.flex-text-left h3 span{
    font-size: 4.444vw;
    line-height: 4.722vw;
}

.flex-text-left span.font-austin-italic {
    color: rgba(249, 246, 243, 1);
}

.flex-text-right {
    width: 40%;
}

.flex-text-right p {
    font-size: 16px;
    line-height: 26px;
    color: rgba(239, 235, 230, 1);
    margin: 0px;
    letter-spacing: 0.65px;
    width: 437px;
    max-width: 100%;
}

section.image-grids-animation {
    padding-bottom: 10.069vw;
    padding-left: 15px;
    padding-right: 15px;
}

.column-content h2 {
    margin: 0px;
    font-size: 2.778vw;
    line-height: 2.917vw;
    letter-spacing: 0.65px;
}

.column-content .content p {
    width: 309px;
    max-width: 100%;
    margin-top: 16px;
    margin-bottom: 0px;
    font-size: 16px;
    line-height: 26px;
}

.carousel-controls{
  display: none;
}

.modal-action-btns {
    position: absolute;
    bottom: 19px;
    right: 17px;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: 0px 17px;
    z-index: 2;
}

.modal-action-btns button {
    width: 45px;
    height: 45px;
    border-radius: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    opacity: 1;
    background-color: rgba(90, 88, 87, 1);
}

.modal-action-btns svg {
  width: 18.06px;
}

.modal-action-btns svg .cls-1, 
.modal-action-btns svg .cls-2{
  stroke: rgba(249, 246, 243, 1);
}

.modal-action-btns button.disabled {
    pointer-events: none;
}

/*
** Responsive
*/
@media (min-width: 1500px){

  .flex-text-left h3{
    font-size: 60px;
    line-height: 67px;
  }

  .flex-text-left h3 span{
      font-size: 64px;
      line-height: 68px;
  }

  .text-flexbox{
    padding-top: 100px;
  }

  .column-content h2{
    font-size: 40px;
    line-height: 42px;
  }

  h2.section-center-heading{
    font-size: 80px;
    line-height: 88px;
  }

  h2.section-center-heading span{
    line-height: 67px;
  }

}

@media (max-width: 1300px){
  section.image-grids-animation .container{
    padding: 0px 20px;
  }
}

@media (min-width: 992px) and (max-width: 1200px){
  .text-flexbox{
    gap: 0px;
  }
}
@media (min-width: 992px){
  div#imageGridModal {
      display: none !important;
  }
  section.image-grids-animation h2.section-center-heading{
    margin-top: -50px;
  }
}

@media (max-width: 991px){
  /* Hide original grid content on mobile */
  .image-grid-row .column-content .content {
    display: none;
  }
  .openImage-btn,
  span.image-grid-title{
    opacity: 1;
    visibility: visible;
  }

  .column .content{
    display: none;
  }

  .carousel-controls {
      position: relative;
      width: 100%;
      display: flex;
      justify-content: flex-end;
      gap: 0px 17px;
      top: -76px;
  }

  section.image-grids-animation{
    margin-top: 200px;
  }

  .carousel-controls button {
    background-color: rgba(90, 88, 87, 1);
    opacity: 1;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 45px;
    height: 45px;
    border-radius: 100%;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .carousel-controls button svg path{
    stroke: rgba(249, 246, 243, 1);
  }

  .carousel-controls button:hover {
    background-color: rgba(90, 88, 87, 1);
  }

  .carousel-controls svg{
    width: 18.06px;
  }

  .carousel-controls svg .cls-1,
  .carousel-controls svg .cls-2{
    stroke: rgba(249, 246, 243, 1);
  }

  .progress-bar {
    height: 1.5px;
    background-color: rgba(90, 88, 87, 1);
    margin: 0px auto !important;
    display: block;
    position: relative;
    top: -106px;
  }

  .progress-bar .progress {
    height: 100%;
    background-color: rgba(249, 246, 243, 1);
    width: 0%;
    transition: width 0.3s ease;
    display: block;
  }

  .image-grid-row{
    gap: 0px 17px;
    display: flex;
    overflow: visible;
    /* scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch; */
    top: -140px;
  }

  .column {
    flex: 0 0 75%;
    min-width: 75%;
    scroll-snap-align: center;
    position: relative;
    transition: transform 0.3s ease;
    box-sizing: border-box;
    margin: 0px !important;
  }

  .column.active .column-content{
    width: 100%;
  }
  
  section.image-grids-animation {
      padding: 0px 0px 85px;
  }

  h2.section-center-heading {
      font-size: 60px;
      line-height: 64px;
      letter-spacing: 0.65px;
      position: relative;
      top: -43px;
  }

  .text-flexbox{
    padding-top: 41px;
    padding-left: 0px;
    padding-right: 0px;
    gap: 15px 0px;
    flex-wrap: wrap;
  }

  .flex-text-left h3 {
      font-size: 50px;
      line-height: 57px;
      letter-spacing: 0.65px;
  }

  .flex-text-left h3 span.font-austin-italic{
    font-size: 54px;
    line-height: 58px;
  }

  .flex-text-left,
  .flex-text-right{
    width: 100%;
    min-width: unset;
  }

  h2.section-center-heading span{
    font-size: 64px;
    line-height: 68px;
  }
}
</style>

<script type="text/javascript">
document.querySelectorAll('.openImage-btn').forEach(button => {
  button.addEventListener('click', function() {
    resetColumns();
    const column = this.parentElement.parentElement;
    column.classList.add('active');
    const nextColumn = column.nextElementSibling;
    if (nextColumn) {
      nextColumn.classList.add('clickedNextElement');
    }
  });
});

document.querySelectorAll('.close-btn').forEach(button => {
  button.addEventListener('click', function(event) {
    event.stopPropagation();
    const column = this.parentElement.parentElement.parentElement;
    column.classList.remove('active');
    const nextColumn = column.nextElementSibling;
    if (nextColumn) {
      nextColumn.classList.remove('clickedNextElement');
    }
  });
});

function resetColumns() {
  document.querySelectorAll('.column').forEach(column => {
    column.classList.remove('active');
    column.classList.remove('clickedNextElement');
  });
}


document.addEventListener("DOMContentLoaded", function() {
  const row = document.querySelector('.image-grid-row');
  const columns = document.querySelectorAll('.column');
  const prevBtn = document.getElementById('prev-btn');
  const nextBtn = document.getElementById('next-btn');
  const progressBar = document.querySelector('.progress-bar .progress');
  let currentIndex = 0;
  const totalColumns = columns.length;
  let isDragging = false;
  let startX = 0;
  let currentTranslate = 0;
  let prevTranslate = 0;
  
  function updateCarousel() {
    row.style.transform = `translateX(-${currentIndex * 75}%)`;
    updateProgressBar();
    updateButtonState();
  }

  function updateProgressBar() {
    const progressPercentage = ((currentIndex + 1) / totalColumns) * 100;
    progressBar.style.width = `${progressPercentage}%`;
  }

  function updateButtonState() {
    if (currentIndex === 0) {
      prevBtn.classList.add('disabled');
    } else {
      prevBtn.classList.remove('disabled');
    }

    if (currentIndex === totalColumns - 1) {
      nextBtn.classList.add('disabled');
    } else {
      nextBtn.classList.remove('disabled');
    }
  }

  prevBtn.addEventListener('click', function() {
    if (currentIndex > 0) {
      currentIndex--;
      updateCarousel();
    }
  });

  nextBtn.addEventListener('click', function() {
    if (currentIndex < totalColumns - 1) {
      currentIndex++;
      updateCarousel();
    }
  });

  // Initial state of buttons
  updateButtonState();

  // Touch events for swiping
  row.addEventListener('touchstart', function(e) {
    startX = e.touches[0].clientX;
    isDragging = true;
    prevTranslate = currentTranslate;
  });

  row.addEventListener('touchmove', function(e) {
    if (!isDragging) return;
    const moveX = e.touches[0].clientX;
    const difference = startX - moveX;

    if (difference > 50 && currentIndex < totalColumns - 1) {
      nextBtn.click();
      isDragging = false; // Prevent multiple actions
    } else if (difference < -50 && currentIndex > 0) {
      prevBtn.click();
      isDragging = false; // Prevent multiple actions
    }
  });

  row.addEventListener('touchend', function() {
    isDragging = false;
  });

  // Window resize event to reset carousel position on resizing
  window.addEventListener('resize', function() {
    if (window.innerWidth <= 991) {
      updateCarousel();
    } else {
      row.style.transform = 'translateX(0)';
    }
  });

  // Initial check
  if (window.innerWidth <= 991) {
    updateCarousel();
  }
});


document.addEventListener('DOMContentLoaded', function() {
  const modal = document.getElementById('imageGridModal');
  const modalContent = modal.querySelector('.modal-content');
  const modalContentArea = modal.querySelector('.modal-contentarea');
  const modalImage = modal.querySelector('#modal-image');
  const modalTitle = modal.querySelector('.modal-title');
  const modalText = modal.querySelector('.modal-text');
  const modalTag = modal.querySelector('.modals-tags');
  const modalLink = modal.querySelector('.modal-link');
  const columns = document.querySelectorAll('.image-grid-row .column');
  const prevModalBtn = document.getElementById('prev-modal-btn');
  const nextModalBtn = document.getElementById('next-modal-btn');
  let currentIndex = 0;

  function updateModalContent(index) {
    const column = columns[index];
    const columnContent = column.querySelector('.content');
    const mobileImageSrc = column.getAttribute('data-mobile-img');
    const imageSrc = column.querySelector('.extendedImage').src;
    const title = columnContent.querySelector('h2').innerHTML;
    const text = columnContent.querySelector('p').innerHTML;
    const gridTag = column.querySelector('.image-grid-title').textContent;
    const linkHref = columnContent.querySelector('a').href;

    // Set the modal image src to the mobile image src
    modalImage.src = mobileImageSrc;

    modalTitle.innerHTML = title;
    modalText.innerHTML = text;
    modalTag.textContent = gridTag;
    modalLink.href = linkHref;

    modalLink.addEventListener('click', function (e) {
      e.preventDefault();

      const url = this.href; 

      modal.style.display = 'none';

      setTimeout(() => {
        window.location.href = url; 
      }, 300); 
    });

    // Disable or enable buttons based on index
    prevModalBtn.classList.toggle('disabled', currentIndex === 0);
    nextModalBtn.classList.toggle('disabled', currentIndex === columns.length - 1);
  }

  // Initialize with disabled previous button
  prevModalBtn.classList.add('disabled');

  document.querySelectorAll('.openImage-btn').forEach((button, index) => {
    button.addEventListener('click', function() {
      currentIndex = index;
      updateModalContent(currentIndex);

      // Wait for the modal image to load before displaying the modal
      modalImage.addEventListener('load', function onImageLoad() {
        modal.style.display = 'flex';
        modalImage.removeEventListener('load', onImageLoad); // Remove the event listener to avoid duplication
      });

      // Fallback timeout in case image load event is delayed
      setTimeout(() => {
        if (modalImage.complete) {
          modal.style.display = 'flex';
        }
      }, 500);
    });
  });

  document.getElementById('close-modal-btn').addEventListener('click', function() {
    modal.style.display = 'none';
  });

  document.getElementById('next-modal-btn').addEventListener('click', function() {
    currentIndex = (currentIndex + 1) % columns.length;
    updateModalContent(currentIndex);
  });

  document.getElementById('prev-modal-btn').addEventListener('click', function() {
    currentIndex = (currentIndex - 1 + columns.length) % columns.length;
    updateModalContent(currentIndex);
  });
});

</script>

{% schema %}
{
  "name": "Animated Image Grids",
  "settings": [
    {
      "type": "header",
      "content": "Column 1"
    },
    {
      "type": "image_picker",
      "id": "extended_image_1",
      "label": "Upload Extended Image"
    },
    {
      "type": "image_picker",
      "id": "grid_mobile_1",
      "label": "Upload Mobile Image"
    },
    {
      "type": "text",
      "id": "img_tag_1",
      "label": "Image Tag"
    },
    {
      "type": "text",
      "id": "img_heading1",
      "label": "Heading"
    },
    {
      "type": "text",
      "id": "img_italic_heading1",
      "label": "Heading in italic"
    },
    {
      "type": "text",
      "id": "img_content1",
      "label": "Content",
      "info": "Please limit content to 89 characters."
    },
    {
      "type": "text",
      "id": "img_learnmore1",
      "label": "Link of learn more button"
    },
    {
      "type": "header",
      "content": "Column 2"
    },
    {
      "type": "image_picker",
      "id": "extended_image_2",
      "label": "Upload Extended Image"
    },
    {
      "type": "image_picker",
      "id": "grid_mobile_2",
      "label": "Upload Mobile Image"
    },
    {
      "type": "text",
      "id": "img_tag_2",
      "label": "Image Tag"
    },
    {
      "type": "text",
      "id": "img_heading2",
      "label": "Heading"
    },
    {
      "type": "text",
      "id": "img_italic_heading2",
      "label": "Heading in italic"
    },
    {
      "type": "text",
      "id": "img_content2",
      "label": "Content",
      "info": "Please limit content to 89 characters."
    },
    {
      "type": "text",
      "id": "img_learnmore2",
      "label": "Link of learn more button"
    },
    {
      "type": "header",
      "content": "Column 3"
    },
    {
      "type": "image_picker",
      "id": "extended_image_3",
      "label": "Upload Extended Image"
    },
    {
      "type": "image_picker",
      "id": "grid_mobile_3",
      "label": "Upload Mobile Image"
    },
    {
      "type": "text",
      "id": "img_tag_3",
      "label": "Image Tag"
    },
    {
      "type": "text",
      "id": "img_heading3",
      "label": "Heading"
    },
    {
      "type": "text",
      "id": "img_italic_heading3",
      "label": "Heading in italic"
    },
    {
      "type": "text",
      "id": "img_content3",
      "label": "Content",
      "info": "Please limit content to 89 characters."
    },
    {
      "type": "text",
      "id": "img_learnmore3",
      "label": "Link of learn more button"
    },
    {
      "type": "header",
      "content": "Column 4"
    },
    {
      "type": "image_picker",
      "id": "extended_image_4",
      "label": "Upload Extended Image"
    },
    {
      "type": "image_picker",
      "id": "grid_mobile_4",
      "label": "Upload Mobile Image"
    },
    {
      "type": "text",
      "id": "img_tag_4",
      "label": "Image Tag"
    },
    {
      "type": "text",
      "id": "img_heading4",
      "label": "Heading"
    },
    {
      "type": "text",
      "id": "img_italic_heading4",
      "label": "Heading in italic"
    },
    {
      "type": "text",
      "id": "img_content4",
      "label": "Content",
      "info": "Please limit content to 89 characters."
    },
    {
      "type": "text",
      "id": "img_learnmore4",
      "label": "Link of learn more button"
    },
    {
      "type": "header",
      "content": "Bottom Section"
    },
    {
      "type": "text",
      "id": "bottom_main_heading",
      "label": "Main center heading"
    },
    {
      "type": "text",
      "id": "bottom_main_heading_italic",
      "label": "Main heading in italic"
    },
    {
      "type": "text",
      "id": "bottom_text_left",
      "label": "Text on left"
    },
    {
      "type": "text",
      "id": "bottom_text_left_italic",
      "label": "Text on left italic"
    },
    {
      "type": "text",
      "id": "bottom_text_right",
      "label": "Text on right"
    }
  ],
  "presets": [
    {
      "name": "Animated Image Grids",
      "category": "Custom"
    }
  ]
}
{% endschema %}
