<section class="sales-resp-bg">
    <div class="page-width">
  <div class="sales-representatives">
    <h2 class="font-neue-light">{{ section.settings.heading }}</h2>
    
    <div class="content">
      <div class="map">
  
      <div class="selectors">
        
           {% assign countries = shop.metaobjects.countries.values %}
        <div class="selectbox country-box">
          <svg width="16" height="10" viewBox="0 0 16 10" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M8.03283 8.6626L14.91 1.78565L14.384 1.2594L7.955 7.66191L1.52603 1.2594L1 1.78565L7.955 8.74065L8.03283 8.6626Z" fill="#292521" stroke="#292521"/>
          </svg>
          <select id="country" class="font-neue-roman">
              <option>United States</option>
            {% for country in countries %}  
            
              <option value="{{ country.country_code }}">{{ country.country_name }}</option>
                  
            {% endfor %}
            
          </select>
        </div>
        
           {% assign states = shop.metaobjects.states.values %}
        
          <div class="selectbox state-box">
            <svg width="16" height="10" viewBox="0 0 16 10" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M8.03283 8.6626L14.91 1.78565L14.384 1.2594L7.955 7.66191L1.52603 1.2594L1 1.78565L7.955 8.74065L8.03283 8.6626Z" fill="#292521" stroke="#292521"/>
            </svg>
            <select id="state">
  
              <option>State</option>
              
              {% for state in states %}  
              
                <option value="{{ state.state_code }}">{{ state.state_name }}</option>
                    
              {% endfor %}
  
            </select>
          </div>
        
        
      </div>
  
        {% render 'canada-map' %}
  
        
        
  <svg id="usa-map" class="activemap" xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 1259 1024">
    <defs>
      <style>
        .cls-1{
          fill: #d3d3d3;
        }
  
        .cls-2 {
          fill: #d3d3d3;
          stroke: #fff;
          stroke-miterlimit: 10;
          stroke-width: .8px;
        }
      </style>
    </defs>
    <g>
      <g id="Layer_1">
        <path id="HI" aria-label="Hawaii" class="cls-2" d="M484.7,805.1l2.4-4.1,2.7-.3.4,1-2.6,3.5h-2.9ZM496.7,801l7.1,3.2,2.5-.3,2-4.5-.6-4-4.9-.7-4.8,2-1.3,4.3ZM532.5,813.8l4.2,6.6,2.9-.3,1.3-.5,1.7,1.6h4.4c0,0,1.2-1.8,1.2-1.8l-3.4-2.2-2.2-4.4-2.4-4.2-6.9,3.2-.8,2ZM555.9,824.9l1.6-2.2,5.5,1.3.8-.5,7.2,1-.4,1.5-3.1,1.6-5.1-.5-6.5-2.2ZM562,831.1l2.2,4.6,3.6-1.2.4-1.9-1.8-2.5-4.4-.5v1.5ZM570.2,830l2.8-3.3,5.4,3,5.1,1.5,5,3.4v2.3c-.1,0-4.3,2-4.3,2l-5.7,1-2.8-1.8-5.5-8.1ZM589.2,848.8l1.9-1.5,3.9,2,8.8,4.4,3.9,2.6,1.8,2.9,2.1,5.2,4.7,3.2-.4,1.5-4.7,3.7-5,1.6-1.7-.8-3.7,2-3,3.7-2.8,3.3-2.1-.2-4.1-3.2-.2-5.3.8-2.8-1.7-6.7-2.4-2.2v-3c-.1,0,2.6-1.1,2.6-1.1l2.6-3.5.6-1.1-1.8-2.1v-2.6Z"/>
        <path id="Fl" aria-label="Florida" class="cls-2" d="M1003.4,672.3l2.2,7,3.6,9.4,5.1,9,3.6,6.1,4.7,5.3,3.9,3.6,1.6,2.8-1.1,1.2-.8,1.2,2.8,7.2,2.8,2.8,2.5,5.1,3.4,5.6,4.4,7.9,1.2,7.3.5,11.5.6,1.7-.3,3.3-2.3,1.2.3,1.9-.6,1.9.3,2.3.5,1.9-2.6,3.1-3,1.4-3.7.2-1.4,1.6-2.3.9-1.2-.5-1.1-.9-.3-2.8-.8-3.3-3.3-5-3.4-2.2-3.7-.3-.8,1.2-3-4.2-.6-3.4-2.5-3.9-1.7-1.1-1.6,2-1.7-.3-2-4.8-2.8-3.7-2.8-5.1-2.5-3-3.4-3.6,2-2.3,3.1-5.3-.2-1.6-4.4-.9-1.6.6.3.6,2.5.9-1.4,4.4-.8.5-1.7-3.9-1.2-4.7-.3-2.6,1.4-4.5v-9.2l-3-3.6-1.2-3-5-1.2-1.9-.6-1.6-2.5-3.3-1.6-1.1-3.3-2.6-.9-2.3-3.6-4-1.4-2.8-1.4h-2.5l-3.9.8-.2,1.9.8.9-.5,1.1-3-.2-3.6,3.4-3.4,1.9h-3.7l-3.1,1.2-.3-2.6-1.6-1.9-2.8-1.1-1.6-1.4-7.8-3.7-7.3-1.7-4.2.6-5.8.5-5.8,2-3.3.6-.2-7.7-2.5-1.9-1.7-1.7.3-3,9.8-1.2,24.6-2.8,6.5-.6,5.2.3,2.5,3.7,1.4,1.4,7.8.5,10.4-.6,20.7-1.2,5.2-.6h4.4l.2,2.8,3.7.8.3-4.6-1.6-4.4.9-.7,4.9.4,5.2.4ZM1015.4,799.6l2.3-.6,1.2-.2,1.4-2.3,2.3-1.6,1.2.5,1.6.3.4,1-3.3,1.2-4,1.4-2.3,1.2-.8-.9ZM1028.4,794.8l1.2,1,2.6-2,5.1-4,3.6-3.7,2.4-6.4.9-1.6.2-3.3-.7.5-.9,2.7-1.4,4.4-3.1,5.1-4.2,4-3.3,1.9-2.4,1.4Z"/>
        <path id="SC" aria-label="South Carolina" class="cls-2" d="M1009,641l-1.7.9-2.5-1.2-.6-2-1.2-3.4-2.2-2-2.5-.6-1.6-4.7-2.6-5.8-4-1.9-2-1.9-1.2-2.5-2-1.9-2.2-1.2-2.2-2.8-3-2.2-4.4-1.7-.5-1.4-2.3-2.8-.5-1.4-3.3-5-3.3.2-3.9-2.3-1.2-1.2-.3-1.7.8-1.9,2.2-.9-.3-2,5.9-2.5,8.7-4.4,7-.8,15.9-.5,2.2,1.9,1.6,3.1,4.2-.5,12.1-1.4,2.8.8,12.1,7.3,9.7,7.8-5.2,5.3-2.5,5.9-.5,6.1-1.6.8-1.1,2.6-2.3.6-2,3.4-2.6,2.6-2.2,3.3-1.6.8-3.4,3.3-2.8.2.9,3.1-4.8,5.3-2,1.2Z"/>
        <path id="GA" aria-label="Georgia" class="cls-2" d="M940.1,588.1l-4.7.8-8.1,1.1-8.2.9v2.1l.2,2,.6,3.3,3.3,7.6,2.3,9.5,1.4,5.9,1.6,4.7,1.4,6.7,2,6.1,2.5,3.3.5,3.3,1.9.8.2,2-1.7,4.7-.5,3.1-.2,1.9,1.6,4.2.3,5.1-.8,2.3.6.8,1.4.8.6,3.3,2.5,3.7,1.4,1.4,7.6.2,10.4-.6,20.7-1.2,5.2-.6h4.4l.2,2.8,2.5.8.3-4.2-1.6-4.4,1.1-1.6,5.6.8,4.8.3-.7-6.1,2.2-9.6,1.4-4-.5-2.5,3.2-6-.5-1.3-1.8.7-2.5-1.2-.6-2-1.2-3.4-2.2-2-2.5-.6-1.6-4.7-2.8-6.1-4-1.9-2-1.9-1.2-2.5-2-1.9-2.2-1.2-2.2-2.8-3-2.2-4.4-1.7-.5-1.4-2.3-2.8-.5-1.4-3.3-4.7-3.3.2-4-2.9-1.2-1.2-.3-1.7.8-1.9,2.3-1.2-1.1-1.2v-.3c0,0-5.5.9-5.5.9l-6.7.8h-6.6Z"/>
        <path id="AL" aria-label="Alabama" class="cls-2" d="M878.5,692.7l-1.6-14.6-2.6-18,.2-13.5.8-29.9-.2-16,.2-6.2,7.5-.4,26.7-2.5,8.6-.6v2.1c0,0,.1,2,.1,2l.6,3.3,3.3,7.6,2.3,9.5,1.4,5.9,1.6,4.7,1.4,6.7,2,6.1,2.5,3.3.5,3.3,1.9.8.2,2-1.7,4.7-.5,3.1-.2,1.9,1.6,4.2.3,5.1-.8,2.3.6.8,1.4.8,1,2.4h-6.1l-6.5.6-24.6,2.8-10,1.4v3.6c0,0,1.6,1.7,1.6,1.7l2.5,1.9.6,7.6-5.3,2.5-2.6-.3,2.6-1.9v-.9l-3-5.8-2.2-.6-1.4,4.2-1.2,2.6-.6-.2h-2.9Z"/>
        <path id="NC" aria-label="North Carolina" class="cls-2" d="M1077.2,530.8l1.6,4.5,3.4,6.2,2.3,2.3.6,2.2-2.3.2.8.6-.3,4-2.5,1.2-.6,2-1.2,3-3.6,1.6-2.3-.3-1.4-.2-1.6-1.2.3,1.2v.9h1.9l.8,1.2-1.9,6.1h4l.6,1.6,2.2-2.2,1.2-.5-1.9,3.4-3,4.7h-1.2l-1.1-.5-2.6.6-5,2.3-6.2,5.1-3.3,4.5-1.9,6.2-.5,2.3-4.5.5-5.2,1.3-9.6-7.9-12.1-7.3-2.8-.8-12.1,1.4-4.1.7-1.6-3.1-2.9-2-15.9.5-7,.8-8.7,4.4-5.9,2.5-1.6.3-5.6.9-6.7.8-6.5.5.5-3.9,1.7-1.4,2.6-.6.6-3.6,4-2.6,3.7-1.4,4-3.4,4.2-2,.6-3,3.7-3.7.6-.2s0,1.1.8,1.1,1.9.3,1.9.3l2.2-3.4,2-.6,2.2.3,1.6-3.4,2.8-2.5.5-2v-3.8l4.4.7,6.9-1.2,15.2-1.9,16.5-2.5,19.2-3.8,19-4,10.9-2.7,5.2-1.3ZM1080.9,562.6l2.5-2.4,3-2.5,1.5-.6.2-1.9-.6-5.9-1.5-2.3-.6-1.8.7-.2,2.6,5.3.4,4.3-.2,3.3-3.3,1.5-2.7,2.3-1.1,1.2-.9-.3Z"/>
        <path id="TN" aria-label="Tennessee" class="cls-2" d="M947.3,552.2l-49.9,4.8-15.2,1.7-4.4.5h-3.7v3.7l-8.1.5-6.7.6h-10.7c0,.1-.3,5.7-.3,5.7l-2.1,6-1,2.9-1.3,4.2-.3,2.5-3.9,2.2,1.4,3.4-.9,4.2-.9.8,7-.2,23.2-1.9,5.1-.2,7.8-.5,26.7-2.5,9.8-.8,8.1-.9,8.1-1.1,4.7-.8v-4.3c0,0,1.6-1.4,1.6-1.4l2.6-.6.6-3.6,4-2.6,3.7-1.4,4-3.4,4.2-2,.8-3.4,4.2-3.7.6-.2s0,1.1.8,1.1,1.9.3,1.9.3l2.2-3.4,2-.6,2.2.3,1.6-3.4,2-2.2.6-.9.2-3.8-1.4-.3-2.3,1.9-7.6.2-11.5,1.8-9.5.8Z"/>
        <path id="RI" aria-label="Rhode Island" class="cls-2" d="M1117.5,416.7l-.5-4-.8-4.2-1.6-5.7,5.5-1.5,1.6,1.1,3.3,4.2,2.8,4.3-2.8,1.5-1.2-.2-1.1,1.7-2.3,1.9-2.9.9Z"/>
        <path id="CT" aria-label="Connecticut" class="cls-2" d="M1116.7,416.9l-.6-4-.8-4.2-1.6-5.8-4,.9-21,4.6.6,3.2,1.4,7v7.8l-1.1,2.2,1.8,2,4.8-3.3,3.4-3.1,1.9-2,.8.6,2.6-1.4,5-1.1,6.8-3.4Z"/>
        <path id="MA" aria-label="Massachusetts" class="cls-2" d="M1142.4,411l2.1-.7.4-1.6h1c0,.1,1,2.3,1,2.3l-1.2.4h-3.7c0,.1.4-.4.4-.4ZM1133.4,411.7l2.2-2.5h1.5l1.8,1.4-2.3,1-2.1,1-1.1-.9ZM1100,390.6l16.8-4,2.2-.6,2-3.1,3.6-1.6,2.8,4.2-2.3,5-.3,1.4,1.9,2.5,1.1-.8h1.7l2.2,2.5,3.7,5.8,3.4.5,2.2-.9,1.7-1.7-.8-2.6-2-1.6-1.4.8-.9-1.2.5-.5,2-.2,1.7.8,1.9,2.3.9,2.8.3,2.3-4,1.4-3.7,1.9-3.7,4.4-1.9,1.4v-.9l2.3-1.4.5-1.7-.8-3-2.8,1.4-.8,1.4.5,2.2-2,1-2.6-4.4-3.3-4.2-2-1.7-6.3,1.8-4.9,1-21,4.6-.4-4.8.6-10.2,5-.9,6.4-1.4Z"/>
        <path id="ME" aria-label="Maine" class="cls-2" d="M1164.8,318.1l1.9,2,2.2,3.6v1.9l-2,4.5-1.9.6-3.3,3-4.7,5.3h-1.2c-.6,0-.9-2-.9-2l-1.7.2-.9,1.4-2.3,1.4-.9,1.4,1.6,1.4-.5.6-.5,2.6-1.9-.2v-1.6l-.3-1.2-1.4.3-1.7-3.1-2,1.2,1.2,1.4.3,1.1-.8,1.2.3,3,.2,1.6-1.6,2.5-2.8.5-.3,2.8-5.1,3-1.2.5-1.6-1.4-3,3.4.9,3.1-1.4,1.2-.2,4.2-1.1,6-2.4-1.1-.5-3-3.7-1.1-.3-2.6-7-22.5-4-13.1h1.4c0-.1,1.5.3,1.5.3v-2.5l.8-5.3,2.5-4.5,1.4-3.9-1.9-2.3v-5.9l.8-.9.8-2.6-.2-1.4-.2-4.7,1.7-4.7,2.8-8.6,2-4h1.2l1.2.2v1.1l1.2,2.2,2.6.6.8-.8v-.9l3.9-2.8,1.7-1.7,1.4.2,5.8,2.3,1.9.9,8.7,28.8h5.8l.8,1.9.2,4.7,2.8,2.2h.8l.2-.5-.5-1.1,2.6-.3ZM1144.7,347.1l1.5-1.5,1.3,1,.5,2.3-1.6.9-1.7-2.7ZM1151.1,341.5l1.7,1.8s1.2.1,1.2-.2.2-1.9.2-1.9l.9-.8-.8-1.7-1.9.7-1.3,2.1Z"/>
        <path id="NH" aria-label="New Hampshire" class="cls-2" d="M1124,380.7l.8-1,1-3.2-2.4-.9-.5-3-3.7-1.1-.3-2.6-7-22.5-4.4-14h-.9l-.6,1.6-.6-.5-.9-.9-1.4,1.9v4.8l.3,5.5,1.9,2.6v3.9l-3.6,4.9-2.5,1.1v1.1l1.1,1.7v8.2l-.8,8.9-.2,4.7.9,1.2-.2,4.4-.5,1.7,1.4.9,15.8-4.5,2.2-.6,1.5-2.5,3.6-1.8Z"/>
        <path id="VT" aria-label="Vermont" class="cls-2" d="M1088.9,391.6l-.8-5.4-2.3-9.6-.6-.3-2.8-1.2.8-2.8-.8-2-2.6-4.5.9-3.7-.8-5-2.3-6.2-.8-4.7,25.2-6.5.3,5.6,1.9,2.6v3.9l-3.6,3.9-2.5,1.1v1.1l1.1,1.7v8.2l-.8,8.9-.2,4.7.9,1.2-.2,4.4-.5,1.7.6,1.5-6.7,1.3h-3.4Z"/>
        <path id="NY" aria-label="New York" class="cls-2" d="M1073.8,426l-1.1-.9-2.5-.2-2.2-1.9-1.6-5.9h-3.3c0,.1-2.4-2.5-2.4-2.5l-18.6,4.2-41.4,8.4-7.2,1.2-.7-6.2,1.4-1.1,1.2-1.1.9-1.6,1.7-1.1,1.9-1.7.5-1.6,2-2.6,1.1-.9-.2-.9-1.2-3-1.7-.2-1.9-5.9,2.8-1.7,4.2-1.4,3.9-1.2,3.1-.5,6.1-.2,1.9,1.2,1.6.2,2-1.2,2.5-1.1,5-.5,2-1.7,1.7-3.1,1.6-1.9h2l1.9-1.1.2-2.2-1.4-2-.3-1.4,1.1-2v-1.4h-1.7l-1.7-.8-.8-1.1-.2-2.5,5.6-5.3.6-.8,1.4-2.8,2.8-4.4,2.6-3.6,2-2.3,2.3-1.8,3-1.2,5.3-1.2,3.1.2,4.4-1.4,7.3-2,.5,4.8,2.3,6.2.8,5-.9,3.7,2.5,4.4.8,2-.8,2.8,2.8,1.2.6.3,3,10.6-.5,4.9-.5,10.4.8,5.3.8,3.4,1.4,7v7.8l-1.1,2.2,1.8,1.9.8,1.6-1.9,1.7.3,1.2,1.2-.3,1.4-1.2,2.2-2.5,1.1-.6,1.6.6,2.2.2,7.6-3.7,2.8-2.6,1.2-1.4,4,1.6-3.3,3.4-3.9,2.8-6.8,5.1-2.5.9-5.6,1.9-3.9,1.1-1.1-.5-.2-3.5.5-2.6-.2-2-2.7-1.6-4.4-.9-3.7-1.1-3.6-1.8Z"/>
        <path id="NJ" aria-label="New Jersey" class="cls-2" d="M1073.4,426.8l-2,2.3v3l-1.9,3-.2,1.6,1.2,1.2-.2,2.3-2.2,1.1.8,2.6.2,1.1,2.6.3.9,2.5,3.4,2.3,2.3,1.6v.8l-3.1,3-1.6,2.2-1.4,2.6-2.2,1.2-1.2.7-.2,1.2-.6,2.5,1.1,2.2,3.1,2.8,4.7,2.2,3.9.6.2,1.4-.8.9.3,2.6h.8l2-2.3.8-4.7,2.6-3.9,3-6.2,1.1-5.3-.6-1.1-.2-9-1.6-3.3-1.1.8-2.6.3-.5-.5,1.1-.9,2-1.9v-1.1c0,0-.3-3.3-.3-3.3l.5-2.6-.2-2-2.5-1.1-4.4-.9-3.7-1.1-3.3-1.7Z"/>
        <path id="PA" aria-label="Pennsylvania" class="cls-2" d="M1067.6,461.6l1.1-.6,2.2-.6,1.4-2.6,1.6-2.2,3.1-3v-.8l-2.3-1.6-3.4-2.3-.9-2.5-2.6-.3-.2-1.1-.8-2.6,2.2-1.1.2-2.3-1.2-1.2.2-1.6,1.9-3v-3l2.3-2.3.2-1-2.5-.2-2.2-1.9-2.3-5.1-2.9-.9-2.2-2.1-17.9,3.9-41.4,8.4-8.6,1.4-.5-6.8-5.3,5.4-1.2.5-4,2.9,2.8,18.4,2.4,9.4,3.4,18.5,3.1-.6,11.5-1.4,36.5-7.4,14.3-2.7,8-1.6.3-.2,2-1.6,1.7-.6Z"/>
        <path id="DE" aria-label="Delaware" class="cls-2" d="M1067.8,465.4l.6-2v-1.2h-1.2c0-.1-2,1.5-2,1.5l-1.4,1.4,1.4,4,2.2,5.4,2,9.3,1.6,6.1,4.8-.2,5.9-1.2-2.2-7.1-.9.5-3.4-2.3-1.7-4.5-1.9-3.4-2.2-.9-2-3.4.4-2Z"/>
        <path id="MD" aria-label="Maryland" class="cls-2" d="M1081.8,489.3l-5.9,1.2-5.6.2-1.8-6.8-2-9.3-2.2-5.4-1.2-4.2-7.2,1.6-14.3,2.7-36,7.3,1.1,4.8.9,5.4.3-.3,2-2.3,2.2-2.5,2.3-.6,1.4-1.4,1.7-2.5,1.2.6,2.8-.3,2.5-2,1.9-1.4,1.8-.5,1.6,1.1,2.8,1.4,1.9,1.7,1.2,1.5,4,1.6v2.8l5.3,1.2,1.1.5,1.4-2,2.8,1.9-1.2,2.4-.7,3.8-1.9,2.5v2l.6,1.7,4.9,1.3h4.1c0-.1,3,.8,3,.8l2,.3.9-2-1.4-2v-1.7l-2.3-2-2-5.3,1.2-5.1-.2-2-1.2-1.2s1.4-1.6,1.4-2.2.5-2,.5-2l1.9-1.2,1.9-1.6.5.9-1.4,1.6-1.2,3.6.3,1.1,1.7.3.5,5.3-2,.9.3,3.4.5-.2,1.1-1.9,1.6,1.7-1.6,1.2-.3,3.3,2.5,3.3,3.7.5,1.6-.8,3.1,4,1.3.5,6.4-2.7,1.9-3.9v-4.6ZM1065.8,498l1.1,2.4.2,1.7,1.1,1.8s.9-.9.9-1.2-.7-3-.7-3l-.7-2.3-1.9.6Z"/>
        <path id="WV" aria-label="West Virginia" class="cls-2" d="M1004.5,476.5l1.1,4.8,1,6.6,3.4-2.6,2.2-3,2.4-.6,1.4-1.4,1.7-2.5,1.1.6,2.8-.3,2.5-2,1.9-1.4,1.8-.5,1.3,1,2.1,1.1,1.9,1.7,1.3,1.2v4.5c0,0-5.5-3-5.5-3l-4.4-1.7-.2,5.1-.5,2-1.6,2.6-.6,1.6-3,2.3-.5,2.2-3.3.3-.3,3-1.1,5.3h-2.5l-1.2-.8-1.6-2.6-1.7.2-.3,4.2-2,6.4-4.8,10.4.8,1.2-.2,2.6-2,1.9-1.4-.3-3.1,2.3-2.5-.9-1.7,4.5s-3.6.8-4.2.9c-.6.2-2.3-1.2-2.3-1.2l-2.3,2.2-2.5.6-2.8-.8-1.1-1.2-2.1-2.9-3-1.9-2.5-2.6-2.8-3.6-.6-2.2-2.5-1.4-.8-1.6-.2-5.1h2.1c0-.1,1.9-.9,1.9-.9l.2-2.6,1.6-1.4.2-4.8.9-3.7,1.2-.6,1.2,1.1.5,1.7,1.7-.9.5-1.6-1.1-1.7v-2.3l.9-1.2,2.2-3.3,1.2-1.4,2,.5,2.2-1.6,3-3.3,2.2-3.7.3-5.4.5-4.8v-4.5l-1.1-3,.9-1.4,1.2-1.2,3.4,19.1,4.5-.7,10.7-1.6Z"/>
        <path id="KY" aria-label="Kentucky" class="cls-2" d="M971,530.2l-2.2,2.6-4,3.4-4.1,5.7-1.7,1.7v2l-3.7,2-5.4,3.3-3.4.4-49.9,4.7-15.2,1.7-4.4.5h-3.7l-.2,4.1h-7.9c0,.1-6.7.7-6.7.7l-10,.2,1.8-.2,2.1-1.7,2-1.1.2-3.1.9-1.8-1.5-2.4.8-1.8,2.2-1.7,2-.6,2.6,1.2,3.4,1.2,1.1-.3.2-2.2-1.2-2.3.3-2.2,1.9-1.4,2.5-.6,1.6-.6-.8-1.7-.6-1.9,1.1-.8,1-3.2,2.9-1.6,5.6-.9,3.4-.5,1.4,1.9,1.7.8,1.7-3.1,2.8-1.4,1.9,1.6.8,1.1,2-.5-.2-3.3,2.8-1.6,1.1-.8,1.1,1.6h4.5l.8-2-.3-2.2,2.8-3.4,4.5-3.7.5-4.4,2.6-.3,3.7-1.7,2.6-1.9-.3-1.9-1.4-1.4.5-2.1,4-.2,2.3-.8,2.8,1.6,1.6,4.2,5.6.3,1.7,1.7,2,.2,2.3-1.4,3,.5,1.2,1.4,2.6-2.5,1.7-1.2h1.6l.6,2.6,1.7.9,2.3,2.1.2,5.3.8,1.6,2.5,1.4.6,2.2,2.8,3.6,2.5,2.6,3,1.8Z"/>
        <path id="OH" aria-label="Ohio" class="cls-2" d="M980.3,431.3l-5.9,3.9-3.7,2.2-3.3,3.6-3.9,3.7-3.1.8-2.8.5-5.3,2.5-2,.2-3.3-3-5,.6-2.5-1.4-2.3-1.3-4.7.7-9.8,1.6-7.5,1.2,1.2,14.1,1.7,13.2,2.5,22.5.5,4.6h4c0-.1,2.3-.9,2.3-.9l3.2,1.4,2,4.2h4.9l1.8,2h1.7c0-.1,2.4-1.4,2.4-1.4l2.4.4,1.9,1.4,1.7-2.1,2.3-1.2,2-.7.6,2.6,1.7.9,3.3,2.3h2.1c0-.1,1.1-1.2,1.1-1.2v-1.3c0,0,1.5-1.4,1.5-1.4l.2-4.8.9-3.7,1.5-1.4,1.5.9.8,1.2,1.2-.2-.4-2.3-.5-.6v-2.3l.9-1.2,2.2-3.3,1.2-1.4,2,.5,2.2-1.6,3-3.3,2.2-3.7.2-5.2.5-4.8v-4.5l-1.1-3,.9-1.4.9-.9-1.4-9.5-2.6-18.7Z"/>
        <path id="MI" aria-label="Michigan" class="cls-2" d="M836.2,322.7l1.8-2,2.1-.8,5.2-3.7,2.2-.5.4.4-4.9,4.9-3.2,1.9-2,.9-1.6-1.1ZM919.1,353.6l.6,2.4,3.1.2,1.2-1.2s0-1.4-.4-1.6c-.3-.2-1.6-1.8-1.6-1.8l-2.1.2-1.6.2-.3,1.1,1.1.5ZM948,414.2l-3.1-7.9-2.2-8.7-2.3-3.1-2.5-1.7-1.6,1.1-3.7,1.7-1.9,4.8-2.6,3.6-1.1.6-1.4-.6s-2.5-1.4-2.3-2,.5-4.8.5-4.8l3.3-1.2.8-3.3.6-2.5,2.3-1.6-.3-9.6-1.6-2.2-1.2-.8-.8-2,.8-.8,1.6.3.2-1.6-2.3-2.2-1.2-2.5h-2.5l-4.4-1.4-5.3-3.3h-2.8l-.6.6-.9-.5-3-2.2-2.8,1.7-2.8,2.2.3,3.4.9.3,2,.5.5.8-2.5.8-2.5.3-1.4,1.7-.3,2,.3,1.6.3,5.3-3.4,2-.6-.2v-4l1.2-2.3.6-2.3-.8-.8-1.9.8-.9,4-2.6,1.1-1.7,1.9-.2.9.6.8-.6,2.5-2.2.5v1.1l.8,2.3-1.1,5.9-1.6,3.9.6,4.5.5,1.1-.8,2.3-.3.8-.3,2.6,3.4,5.8,2.8,6.2,1.4,4.7-.8,4.5-.9,5.8-2.3,5-.3,2.6-3.1,3,4.2-.2,20.6-2.2,7-.9v1.6c0,0,6.7-1.2,6.7-1.2l9.9-1.4,3.7-.4v-.6c0,0,.3-1.4.3-1.4l2-3.6,1.9-1.7-.2-4.9,1.5-1.5,1-.3.2-3.4,1.5-2.9,1,.6.2.6.8.2,1.9-.9-.2-9.3ZM822.6,350.7l.7-.6,2.6-.8,3.4-2.2v-.9l.6-.6,5.8-.9,2.3-1.9,4.2-2,.2-1.2,1.9-2.8,1.7-.8,1.2-1.7,2.2-2.2,4.2-2.3,4.5-.5,1.1,1.1-.3.9-3.6.9-1.4,3-2.2.8-.5,2.3-2.3,3.1-.3,2.5.8.5.9-1.1,3.4-2.8,1.2,1.2h2.2l3.1.9,1.4,1.1,1.4,3,2.6,2.6,3.7-.2,1.4-.9,1.6,1.2,1.6.5,1.2-.8h1.1l1.6-.9,3.9-3.4,3.3-1.1,6.4-.3,4.4-1.9,2.5-1.2,1.4.2v5.4l.5.3,2.8.8,1.9-.5,5.9-1.6,1.1-1.1,1.4.5v6.7l3.1,3,1.2.6,1.2.9-1.2.3-.8-.3-3.6-.5-2,.6-2.2-.2-3.1,1.4h-1.7l-5.6-1.2-5,.2-1.9,2.5-6.7.6-2.3.8-1.1,3-1.2,1.1-.5-.2-1.4-1.6-4.4,2.3h-.6l-1.1-1.6-.8.2-1.9,4.2-.9,3.9-3.1,6.7-1.1-1-1.3-1-1.9-9.9-3.4-1.3-2-2.2-11.7-2.6-2.7-1-7.9-2.1-7.6-1.1-3.5-4.8Z"/>
        <path id="WY" aria-label="Wyoming" class="cls-2" d="M617.5,382l-10.1-.8-30.9-3.2-15.6-2-27.3-4-19.1-2.9-1.4,10.8-3.7,23.3-5.1,29.2-1.5,10.1-1.6,11.4,6.3.9,24.9,2.4,19.8,2.2,35.4,4,22.9,2.8,4.3-42.5,1.4-24.4,1.3-17.3Z"/>
        <path id="MT" aria-label="Montana" class="cls-2" d="M619.8,361.4l.6-10.7,2.2-23.8c.4-4.8,1-8.1,1.3-14.8l.9-14-29.5-2.7-28.1-3.4-28.1-3.9-31.1-5.1-17.7-3.3-31.5-6.7-4.3,20.5,3.3,7.3-1.3,4.4,1.8,4.4,3.1,1.3,4.4,10.4,2.6,3.1.4,1.1,3.3,1.1.4,2-6.8,16.9v2.4l2.4,3.1h.9l4.6-2.9.7-1.1,1.5.7-.2,5.1,2.6,12.1,2.9,2.4.9.7,1.8,2.2-.4,3.3.7,3.3,1.1.9,2.2-2.2h2.6l3.1,1.5,2.4-.9h4l3.5,1.5,2.6-.4.4-2.9,2.9-.7,1.3,1.3.4,3.1,1.7,1.3,1.5-11.1,19.9,2.9,27.1,3.8,15.9,1.8,30.2,3.3,10.6,1.5,1-14.8,1.3-5.3Z"/>
        <path id="ID" aria-label="Idaho" class="cls-2" d="M432.7,417.8c-21.7-4.2-13.6-2.7-20.3-4.2l4.3-16.8,4.2-17,1.3-4.1,2.4-5.7-1.2-2.2h-2.4c0,.1-.8-.9-.8-.9l.4-1.1.3-3,4.3-5.3,1.8-.4,1.1-1.1.5-3.1.9-.7,3.7-5.6,3.7-4.2.2-3.6-3.3-2.5-1.3-4.2.4-9.3,3.5-15.8,4.3-20,3.6-13,.7-3.7,12.5,2.4-4,20.7,2.8,7.4-1,4.4,1.9,4.4,3.1,1.6,4.3,9.4,2.6,3.7.6,1.1,3.3,1.1.4,2.4-6.7,16.2.3,3.2,2.6,2.8,1.8.5,4.6-3.5.4-.5v.8c.1,0,.3,4,.3,4l2.5,12.4,3.3,2.6.4.8,2.1,2.4-.7,2.7.7,3.6,1.9.9,2-1.6,2.5-.5,3.2,1.5,2.4-.6,3.6-.2,3.8,1.5,2.6-.3.9-2.2,2.4-1.6.7,1.6.6,2.2,2.2,2.4-3.6,23.1-4.9,27.9-4-.3-7.9-1.5-9.4-1.8-11.7-2.3-12.1-2.4-8.2-1.8-8.9-1.6-8.5-1.5Z"/>
        <path id="WA" aria-label="Washington" class="cls-2" d="M366.8,249.9l4.2,1.4,9.3,2.6,8.2,1.9,19.3,5.4,22.1,5.4,14.6,3.3-1,3.7-3.9,13.3-4.3,20-3.1,15.5-.3,9-12.7-3.7-15-3.3-13.1.6-1.5-1.5-5.1,1.8-3.8-.2-2.6-1.7-1.5.5-4-.2-1.8-1.3-4.6-1.7-1.4-.2-4.8-1.3-1.7,1.5-5.5-.3-4.6-3.6.2-.8v-7.6c.1,0-1.9-3.7-1.9-3.7l-4-.7-.4-2.3-2.4-.6-2.8-.5-1.7.9-2.2-2.8.3-2.8,2.6-.3,1.6-3.9-2.5-1.1.2-3.6,4.2-.6-2.6-2.6-1.4-6.8.6-2.8v-7.6l-1.7-3.1,2.2-9,2,.5,2.3,2.8,2.6,2.5,3.1,1.9,4.4,2,3,.6,2.8,1.4,3.3.9,2.2-.2v-2.3l1.2-1.1,2-1.2.3,1.1.3,1.7-2.2.5-.3,2,1.7,1.4,1.1,2.3.6,1.9,1.4-.2.2-1.2-.9-1.2-.5-3.1.8-1.7-.6-1.4v-2.4l1.7-3.4-1.1-2.5-2.3-4.7.3-.8.9-.7ZM357.7,255.6l1.9-.2.5,1.3,1.5-1.6h2.3l.8,1.5-1.5,1.6.6.8-.7,1.9-1.3.4s-.9.1-.9-.2,1.4-2.5,1.4-2.5l-1.6-.5-.3,1.4-.7.6-1.5-2.2-.5-2.3Z"/>
        <path id="TX" aria-label="Texas" class="cls-2" d="M620.2,564.4l21.8,1,29.9,1.1-2.2,22.6-.3,17.5v2c.1,0,4.3,3.7,4.3,3.7l1.7.8,1.7.2.7-1.2.9.8,1.7.5,1.5-.7,1.1.4-.3,3.3,4.1,1,2.6.8,3.8.5,2.1,1.8,3.1-1.5,2.7.4,2,2.7,1,.3-.2,1.9,3,1.1,2.7-1.7,1.5.4,2.3.2.4,1.8,4.5,1.9,2.6-.2,1.9-4h.3l1.1,1.8,4.3,1,3.2,1.2,3.2.7,2.1-.7.8-2.4h3.6l1.8.7,2.9-1.5h.6l.4,1.1h4.1l2.3-1.2,1.6.3,1.4,1.8,2.8,1.6,3.4,1,2.6,1.4,2.4,1.6,3.2-.9,1.9.9.5,9.8.3,9.3.7,9.2.5,3.9,2.6,4.4,1,3.9,3.7,6,.5,2.8.5,1-.7,7.2-2.5,4.2.9,2.8-.4,2.4-.8,7-1.3,2.6.6,4.2-5.4,1.5-9.5,4.4-.9,1.9-2.5,1.9-2,1.4-1.2.8-5.4,5.1-2.6,2-5.1,3.1-5.4,2.3-6.1,3.3-1.7,1.4-5.6,3.4-3.3.6-3.7,5.3-3.9.3-.9,1.9,2.2,1.9-1.4,5.3-1.2,4.4-1.1,3.7-.8,4.4.8,2.3,1.7,6.7.9,5.9,1.7,2.6-.9,1.4-3,1.9-5.4-3.7-5.3-1.1-1.2.5-3.1-.6-4-3-5-1.1-7.3-3.3-2-3.7-1.2-6.2-3.1-1.9-.6-2.2.6-.6.3-3.3-1.2-.6-.6-.9,1.2-4.2-1.6-2.2-3.1-1.2-3.3-4.2-3.4-6.4-4-2.5.2-1.9-5.1-11.8-.8-4-1.7-1.9-.2-1.4-5.8-5.1-2.5-3v-1.1l-2.5-2-6.5-1.1-7.2-.6-3-2.2-4.4,1.7-3.4,1.4-2.2,3.1-.9,3.6-4.2,5.9-2.3,2.3-2.5-.9-1.7-1.1-1.9-.6-3.7-2.2v-.6l-1.7-1.9-5-2-7.2-7.5-2.2-4.5v-7.8l-3.1-6.2-.5-2.6-1.6-.9-1.1-2-4.8-2-1.2-1.6-6.8-7.6-1.2-3.1-4.5-2.2-1.4-4.2-2.5-2.8-1.9-.5-.6-4.5,7.7.7,27.9,2.6,27.9,1.5,2.2-22.9,3.7-53.4,1.5-18h1.3M716.6,789.5l-.5-6.8-2.6-6.9-.5-6.8,1.5-7.9,3.2-6.6,3.3-5.2,3-3.4.6.2-4.6,6.4-4.2,6.3-1.9,6.4-.3,5,.9,5.9,2.5,6.9.5,5,.2,1.4h-1.1Z"/>
        <path id="CA" aria-label="California" class="cls-2" d="M408.3,615.8l3.7-.5,1.4-1.9.7-1.9h-3.1c0-.1-1.1-1.8-1.1-1.8l.7-1.6v-5.9l2.1-1.3,2.6-2.5.4-4.7,1.6-3.4,1.9-2,3.1-1.6,1.2-.7.7-1.4-.8-.9-.9-1.5-.9-5.1-2.8-5v-2.7c.1,0-2-3.1-2-3.1l-14.4-22.3-18.7-27.6-21.6-31.8-12.1-18.9,1.7-6.9,6.6-25,7.8-30.2-11.9-3.2-13-3.3-12.1-4-7.3-2-11-2.9-6.8-2.3-1.5,4.5-.2,7.2-5,11.4-3,2.5-.3,1.1-1.7.8-1.4,4-.8,3.1,2.6,4,1.6,4,1.1,3.4-.3,6.2-1.7,3-.6,5.6-.9,3.6,1.7,3.7,2.6,4.4,2.2,4.7,1.2,3.9-.3,3.1-.3.5v2l5.4,6.1-.5,2.3-.6,2.2-.6,1.9.2,7.9,2,3.6,1.9,2.5,2.6.5.9,2.6-1.1,3.4-2,1.6h-1.1l-.8,3.7.5,2.8,3.1,4.2,1.6,5.1,1.4,4.5,1.2,3,3.3,5.6,1.4,2.5.5,2.8,1.6.9v2.3l-.8,1.9-1.7,6.8-.5,1.9,2.3,2.6,4,.5,4.4,1.7,3.7,2h2.8l2.8,3,2.5,4.7,1.1,2.2,3.7,2,4.7.8,1.4,2,.6,3.1-1.4.6.3.9,3.1.8,2.6.2,2.8,4.5,3.7,4,.8,2.2,2.5,4,.3,3.1v9l.5,1.7,9.6,1.4,19,2.6,13.6,1Z"/>
        <path id="AZ" aria-label="Arizona" class="cls-2" d="M409.3,616.5l-2.5,2.1-.3,1.4.5.9,18.2,10.3,11.7,7.3,14.2,8.2,16.2,9.6,11.8,2.3,24.2,2.6,2.4-12,3.6-26.2,6.7-50.9,4.1-29.8-23.7-3.5-26.2-4.4-32.2-6.1-2.8,17.4-.4.4-1.6,2.5h-2.4c0-.1-1.2-2.7-1.2-2.7l-2.6-.3-.9-1.1h-1.1l-.9.6-1.9,1v6.7c-.1,0-.3,1.6-.3,1.6l-.5,12.1-1.4,2.1-.5,3.2,2.6,4.7,1.2,5.6.8,1,1,.5v2.2c-.1,0-1.6,1.3-1.6,1.3l-3.3,1.6-1.9,1.9-1.4,3.5-.5,4.7-2.7,2.6-2,.7v5.6c-.1,0-.5,1.6-.5,1.6l.4.8,3.5.5-.5,2.6-1.4,2.1-3.9,1.2Z"/>
        <path id="NV" aria-label="Nevada" class="cls-2" d="M412.1,414.6l20.2,4.3,9.3,1.9,8.9,1.8,6.4,1.6-.5,5.6-3.4,16.7-3.9,19.2-1.9,9.3-2.1,12.8-3,15.8-3.4,15.1-1.9,9.8-2.4,16.1-.4,1.1-1,2.4h-1.8c0-.1-1.1-2.7-1.1-2.7l-2.6-.5-1.3-.9-2,.3-.9.7-1.3,1.3-.4,6.7-.5,1.6-.4,11.6-1.3,1.6-1.8-2.2-14-21.9-18.7-27.9-21.9-32.6-11.9-17.9,1.6-6.3,6.7-25,7.6-30.2,32.3,7.8,13.2,2.9"/>
        <path id="UT" aria-label="Utah" class="cls-2" d="M520.1,541.3l-23.7-3.3-25.6-4.7-32.5-5.8,1.5-8.8,3.1-14.6,3.2-15.9,2.1-13.1,1.9-8.6,3.6-19.7,3.4-16.8,1.1-5.4,12.2,2.2,11.5,2,9.9,1.8,8,1.3,3.5.5-1.4,10.2-2.2,12.7,7.5.9,15.8,1.7,7.9.8-2,21.1-3.1,21.7-3.6,26.8-1.6,10.7-.5,2.3Z"/>
        <path id="CO" aria-label="Colarado" class="cls-2" d="M641,490.8l1.4-20.5-30.9-2.9-23.5-2.6-35.8-4-19.9-2.4-2.5,21.3-3.1,21.6-3.6,26.9-1.4,10.7-.2,2.7,32.6,3.6,36.3,4.1,30.7,3,16,.8"/>
        <path id="NM" aria-label="New Mexico" class="cls-2" d="M548.7,658.4l-.6-5.9,8.3.5,28.4,2.9,27.3,1.4,1.9-21.5,3.6-53.7,1.1-18.7,1.9.3v-10.7l-31-2.3-35.5-4.3-33.2-4-4,29.6-6.7,51.2-3.6,25.9-2,12.8,14.9,1.9,1.2-9.6,16,2.5,12,1.7Z"/>
        <path id="OR" aria-label="Oregon" class="cls-2" d="M411.7,413.7l4.1-17.2,4.5-17.2,1-4.1,2.3-5.4-.6-1.1h-2.4l-1.2-1.6.4-1.4.5-3.1,4.3-5.3,1.8-1.1,1.1-1.1,1.4-3.4,3.9-5.5,3.4-3.7.2-3.3-3.1-2.4-1.2-4.3-12.7-3.6-14.5-3.4h-14.8c0,.1-.4-1.2-.4-1.2l-5.3,2-4.3-.5-2.3-1.5-1.2.7-4.5-.2-1.6-1.3-5.1-2h-.8c0,.1-4.2-1.3-4.2-1.3l-1.9,1.8-5.9-.3-5.7-4,.7-.8.2-7.5-2.2-3.7-4-.6-.7-2.4-2.3-.4-5.6,2-2.2,6.2-3.1,9.6-3.1,6.2-4.8,13.5-6.2,13.1-7.8,12.1-1.9,2.8-.8,8.2-1.2,5.8,2.6,3.4,6.5,2.2,11.2,3.2,7.6,2.4,11.9,3.5,12.8,3.5,12.7,3.4"/>
        <path id="ND" aria-label="North Dakota" class="cls-2" d="M730.1,366.6l-.4-7.2-1.9-7-1.8-13.1-.4-9.5-1.9-3-1.5-5.1v-9.9l.7-3.7-2-5.3-27.3-.5-17.9-.6-25.5-1.2-24-1.8-1.2,13.7-1.3,14.5-2.2,24-.5,10.6,54.7,3.6,54.4,1.5Z"/>
        <path id="SD" aria-label="South Dakota" class="cls-2" d="M731.5,439.2l-.9-1-1.5-3.5,1.8-3.6,1-5.3-2.5-2-.3-2.6.6-2.9,2.1-.8.3-5.5v-29c0,0-.7-2.9-.7-2.9l-4-3.5-.9-1.9v-1.7l1.8-1.2,1.5-1.8.2-2.6-55.2-1.5-54-3.7-.7,5.1-1.6,15.3-1.3,17.3-1.5,23.7,15.4,1,18.9,1.1,17.3,1.3,22.9,1.3,10.3-.7,2.8,2.2,4.2,2.9.9.7,3.4-.9,3.9-.3h2.6c0-.1,3,1.1,3,1.1l4.4,1.4,3,1.7.6,1.8.9,1.8.7-.5.6-.3Z"/>
        <path id="NE" aria-label="Nebraska" class="cls-2" d="M742.6,481.3l1.3,2.6v2c0,0,2.4,3.6,2.4,3.6l2.6,3h-4.9l-41.8-.9-39.2-.9-20.4-.9,1-20.5-32.1-2.6,4.2-42.3,15,1,19.4,1.1,17.2,1.1,22.9,1.1,10.3-.4,2,2.2,4.6,2.9,1.1.9,4.2-1.3,3.7-.4,2.6-.2,1.8,1.3,4.8,1.5,2.9,1.5.4,1.5.9,2h2.6l.9,5,2.6,7.7,1.2,4.5,2,3.7.5,4.7,1.4,4.1.5,6.2"/>
        <path id="IA" aria-label="Iowa" class="cls-2" d="M821.8,437.7l.2,1.9,2.2,1.1,1.1,1.2.3,1.2,3.7,3.1.7,2.1-.8,2.8-1.4,3.4-.8,2.6-2.1,1.5-1.6.6-5.3,1.4-.7,2.2-.8,2.2.6,1.3,1.7,1.6v3.5l-2.1,1.5-.4,1.4v2.4l-1.4.4-1.6,1.3-.4,1.4.4,1.7-1.3,1.2-2.2-2.6-1.4-2.5-8,.8-9.8.5-24.1.7-12.5.2-9,.2h-1.3c0,.1-1.6-4.2-1.6-4.2l-.2-6.4-1.5-4-.7-5.1-2.2-3.5-.9-4.6-2.6-7.3-1.1-5.2-1.3-2.1-1.5-2.6,1.8-4.2,1.3-5.5-2.6-2-.4-2.6.9-2.4h12.7l47.7-.7,19.1-.7,1.8,2.6,1.8,2.5.4.8-1.8,2.6.4,4.1,2.4,3.7,2.9,1.8,2.3.2,1,2.5Z"/>
        <path id="MS" aria-label="Mississippi" class="cls-2" d="M877.5,692.9l-.2,1.2h-5l-1.4-.8-2-.3-6.5,1.9-1.7-.8-2.5,4-1.1.7-1.1-2.4-1.1-3.7-3.3-3.1,1.1-7.3-.7-.9-1.8.2-7.9.7-23.3.7-.4-1.5.7-7.7,3.3-5.9,5.1-8.8-.9-2h1.1l.7-3.1-2.2-1.8.2-1.8-2-4.4-.3-5.1,1.3-2.6-.4-4.2-1.3-2.9,1.3-1.3-1.3-2,.4-1.8.9-5.9,2.9-2.6-.7-2,3.5-5.1,2.6-.9v-2.4l-.7-1.3,2.6-5.1,2.6-1.1v-3.3c0,0,8.4-.1,8.4-.1l23.2-1.9,4.4-.2v6.1l.2,16-.8,29.9-.2,13.5,2.6,18,1.7,15.2Z"/>
        <path id="IN" aria-label="Indiana" class="cls-2" d="M871.6,533.1v-2.8c0,0,.6-4.4.6-4.4l2.2-2.8,1.7-3.7,2.5-4-.5-5.6-1.7-2.6-.3-3.1.8-5.3-.5-6.7-1.2-15.4-1.2-14.8-.9-11.3,3,.9,1.4.9,1.1-.3,2-1.9,2.7-1.6,4.9-.2,21.1-2.2,5.4-.5,1.4,15.3,4.1,35.4.6,5.6-.4,2.2,1.2,1.7v1.3c0,0-2.3,1.5-2.3,1.5l-3.4,1.5-3.1.5-.6,4.7-4.4,3.2-2.7,3.9.3,2.3-.6,1.5h-3.2l-1.6-1.3-2.4,1.2-2.6,1.4.2,2.9-1.1.2-.5-1-2.1-1.4-3.1,1.3-1.5,2.9-1.4-.8-1.4-1.5-4.3.5-5.4.9-2.8,1.5Z"/>
        <path id="IL" aria-label="Illinois" class="cls-2" d="M871,533.9v-3.5l.2-4.7,2.3-3,1.7-3.6,2.5-3.7-.4-5.1-1.9-3.4v-3.2c0,0,.6-5.1.6-5.1l-.8-6.9-1-15.2-1.2-14.4-.9-11.2-.3-.9-.8-2.5-1.2-3.6-1.6-1.7-1.4-2.5-.2-5.3-9.5,1.3-26.2,1.6-8.4-.4.2,2.3,2.2.7.9,1.1.4,1.8,3.7,3.3.7,2.2-.7,3.3-1.8,3.5-.7,2.4-2.2,1.8-1.8.7-5.1,1.3-.3,1.7-.7,2,.7,1.3,1.8,1.5-.2,4-1.8,1.5-.7,1.5v2.6l-1.8.4-1.5,1.1-.2,1.3.2,2-1.6,1.3-1,2.7.4,3.5,2.2,7,7,7.3,5.3,3.5-.2,4.2.9,1.3,6.2.4,2.6,1.3-.7,3.5-2.2,5.7-.7,3.1,2.2,3.7,6.2,5.1,4.4.7,2,4.8,2,3.1-.9,2.9,1.5,4,1.8,2,1.9-.8.7-2.1,2-1.4,3.1-1.1,3,1.1,2.8,1,.8-.2v-1.2c0,0-1.1-2.7-1.1-2.7l.4-2.3,2.2-1.5,2.3-.9,1.1-.4-.6-1.3-.7-2.1,1.2-1.2.7-2.3Z"/>
        <path id="MN" aria-label="Minnesota" class="cls-2" d="M730.7,367.3l-.4-8.1-1.8-7-1.8-13-.4-9.5-1.8-3.3-1.5-4.8v-9.9l.7-3.7-1.8-5.2h29l.3-7.9.6-.2,2.2.5,1.9.8.8,5.3,1.4,5.9,1.6,1.6h4.7l.3,1.4,6.1.3v2h4.7l.3-1.2,1.1-1.1,2.2-.6,1.2.9h2.8l3.7,2.5,5.1,2.3,2.3.5.5-.9,1.4-.5.5,2.8,2.5,1.2.5-.5,1.2.2v2l2.5.9h3l1.6-.8,3.1-3.1,2.5-.5.8,1.7.5,1.2h.9l.9-.8,8.6-.3,1.7,3h.6l.7-1,4.3-.4-.6,2.2-3.8,1.8-8.9,3.9-4.6,1.9-3,2.5-2.3,3.4-2.2,3.7-1.7.8-4.4,4.8-1.2.2-3.7,2.8-2.7,3-.2,2.9.2,7.5-1.5,1.5-5.1,4-1.8,5.5,2.4,3.5.4,2.4-1.1,2.9-.2,3.5.4,6.8,3.3,4h2.9l2.4,2.2,3.1,1.3,3.5,4.8,6.8,4.8,1.8,2,.2,5.3-19.8.7-58,.4-.3-34.3-.4-2.9-4-3.3-1.1-1.8v-1.5l2-1.5,1.3-1.3v-3.1Z"/>
        <path id="WI" aria-label="Wisconsin" class="cls-2" d="M866.3,433.4l.4-2.9-1.6-4.4-.6-5.9-1.1-2.3.9-3,.8-2.8,1.4-2.5-.6-3.3-.6-3.4.5-1.7,1.9-2.3.2-2.6-.8-1.2.6-2.5.5-3.1,2.6-5.4,2.8-6.5.2-2.2-.3-.9-.8.5-4,6.1-2.6,3.9-1.9,1.7-.8,2.2-1.4.8-1.1,1.9-1.4-.3-.2-1.7,1.2-2.3,2-4.5,1.7-1.6,1.1-2.2-1.6-.9-1.3-1.3-1.5-9.9-3.5-1.1-1.3-2.2-12.1-2.6-2.4-1.1-7.9-2.2-7.9-1.1-4-5.2-.5,1.2-1.1-.2-.6-1.1-2.6-.8-1.1.2-1.7.9-.9-.6.6-1.9,1.9-3,1.1-1.1-1.9-1.4-2,.8-2.8,1.9-7.2,3.1-2.8.6-2.8-.5-.9-.8-2,2.7-.2,2.6v8.1l-1.1,1.5-5.1,3.7-2.2,5.7.4.2,2.4,2,.7,3.1-1.8,3.1v3.7l.4,6.4,2.9,2.9h3.3l1.8,3.1,3.3.4,3.7,5.5,6.8,4,2,2.6.9,7.1.7,3.2,2.2,1.5.2,1.3-2,3.3.2,3.1,2.4,3.7,2.4,1.1,2.9.4,1.3,1.3h8.8l25.1-1.4,9.4-1.2Z"/>
        <path id="MO" aria-label="Missouri" class="cls-2" d="M811.4,483.8l-2.4-3-1.1-2.2-7.5.7-9.5.4-24.4.9-13,.2h-7.6c0,.1-2.2.2-2.2.2l1.2,2.4-.2,2.2,2.4,3.7,3,4,3,2.6,2.2.2,1.3.9v2.9l-1.8,1.5-.4,2.2,2,3.3,2.4,2.9,2.4,1.8,1.3,11.2-.7,34,.2,4.5.4,5.2h22.5c0-.1,22.3-.8,22.3-.8l20-.8,11.2-.2,2.1,3.3-.7,3.2-3,2.3-.6,1.8,5.2.4,3.7-.7,1.7-5.3.6-5.6,2.2-1.9,1.6-1.4,2-1v-2.8c0,0,.7-1.6.7-1.6l-1-1.7h-2.6c0,.1-2.1-2.4-2.1-2.4l-1.3-4.1.8-2.4-1.9-3.3-1.8-4.4-4.6-.8-6.7-5.4-1.7-4,.8-3.1,2-5.8.4-2.8-1.9-1-6.6-.8-1-1.6v-4.1c0,0-5.4-3.3-5.4-3.3l-6.7-7.5-2.2-7-.2-4.1,1.2-2Z"/>
        <path id="AR" aria-label="Arkansas" class="cls-2" d="M845.2,575.6l-3.7.9-5.9-.4.7-2.9,3.1-2.6.4-2.2-1.8-2.9-10.6.4-20,.9-22.4.7-22.4.4,1.5,6.6v7.9l1.3,10.6.2,36.4,2.2,1.9,2.9-1.3,2.6,1.1.4,9.9h22c0,0,18.1-.9,18.1-.9l9.7-.2,1.1-2-.3-3.4-1.8-2.9,1.5-1.4-1.5-2.4.7-2.4,1.3-5.4,2.4-2-.7-2.2,3.5-5.2,2.6-1.3v-1.4c0,0-.4-1.8-.4-1.8l2.7-5.4,2.3-1.2.4-3.3,1.7-1.2.8-4.1-1.3-3.9,3.9-2.3.5-1.9,1.2-4.1,1.1-3.1Z"/>
        <path id="OK" aria-label="Oklahoma" class="cls-2" d="M637.8,554l-10.3-.4-6.2-.5.2.2-.7,10,21.1,1.4,30.8,1.3-2.2,23.5-.4,17.2.2,1.5,4.2,3.5,2,1.1.7-.2.7-2,1.3,1.8h2v-1.4l2.6,1.3-.4,3.7,4,.2,2.4,1.1,4,.7,2.4,1.8,2.2-2,3.3.7,2.4,3.3h.9v2.2l2.2.7,2.2-2.2,1.8.7h2.4l.9,2.4,4.6,1.8,1.3-.7,1.8-4h1.1l1.1,2,4,.7,3.5,1.3,2.9.9,1.8-.9.7-2.4h4.2l2,.9,2.6-2h1.1l.7,1.5h4l1.5-2,1.8.4,2,2.4,3.1,1.8,3.1.9,1.9,1.1-.4-35.8-1.3-10.6-.2-8.5-1.4-6.3-.7-6.9v-3.7c0,0-11.8.3-11.8.3l-44.6-.4-43.3-2-23.8-1.4Z"/>
        <path id="KS" aria-label="Kansas" class="cls-2" d="M761,556.5l-12.1.2-44.3-.4-42.9-2-23.7-1.2,4-62.3,21,.8,38.9,1.3,42.4.4h4.9l3.1,3.1,2.7.2.9,1v1.9l-1.8,1.5-.4,2.5,2.1,3.5,2.4,3,2.4,1.9,1,10.8-.6,33.8Z"/>
        <path id="LA" aria-label="Los Angelos" class="cls-2" d="M856,698.7l-1-2.5-1.1-3-3.2-3.4.9-6.5v-1.1c0,0-1.3.3-1.3.3l-7.9.9-24.1.4-.7-2.3.9-8.1,3.2-5.7,4.8-8.4-.6-2.3,1.2-.7.4-1.9-2.2-2v-1.9c0,0-1.9-4.2-1.9-4.2l-.4-5.7h-9.4c0,0-18.5,1-18.5,1h-21.4v9.2l.7,9,.7,3.7,2.4,4,.9,4.8,4.2,5.3.2,3.1.7.7-.7,8.1-2.9,4.8,1.5,2-.4,2.7-.7,7-1.3,3.1v3.5c0,0,4.6-1.5,4.6-1.5l7.8-.3,10,3.4,6.2,1.1,3.6-1.4,3.1,1.1,3.1.9.8-2-3.1-1.1-2.5.5-2.6-1.6s.2-1.2.8-1.4,3-.9,3-.9l1.7,1.4,1.7-.9,3.1.6,1.4,2.3.3,2.2,4.4.3,1.7,1.7-.8,1.6-1.2.8,1.6,1.6,8.1,3.4,3.4-1.2.9-2.3,2.5-.6,1.7-1.4,1.2.9.8,2.8-2.2.8.6.6,3.3-1.2,2.2-3.3.8-.5-2-.3.8-1.6-.2-1.4,2-.5,1.1-1.2.6.8s-.2,3,.6,3,4,.6,4,.6l3.9,1.9.9,1.4h2.8l1.1.9,2.2-3v-1.4h-1.2l-3.3-2.6-5.6-.8-3.1-2.2,1.1-2.6,2.2.3.2-.6-1.7-.9v-.5h3.1l1.7-3-1.2-1.9-.3-2.6-1.4.2-1.9,2-.6,2.5-3-.6-.9-1.7,1.7-1.9,1.9-1.7-.5-.9Z"/>
        <path id="VA" aria-label="Virginia" class="cls-2" d="M1074.1,502.7v-1.9c0,0,6.1-2.5,6.1-2.5l-.7,3.1-2.8,3.6-.4,4.4.4,3.3-1.8,4.8-2.1,1.8-1.4-4.5.4-5.2,1.5-4,.8-2.9ZM1076.3,530l-56,12.1-36,5.1-6.4-.4-2.5,1.9-7.1.2-8.1.9-8.6.9,8.2-4.8v-2l1.5-2.1,10.2-11.1,3.8,4.3,3.6.9,2.4-1.1,2.2-1.3,2.4,1.3,3.8-1.4,1.8-4.4,2.5.5,2.7-2,1.7.5,2.7-3.5.3-2-.9-1.2,1-1.8,5.1-11.8.6-5.5,1.2-.5,2.1,2.3,3.8-.3,1.9-7.3,2.7-.5,1-2.6,2.5-2.3,1.2-2.3,1.4-3.2v-4.9c0,0,9.5,3.7,9.5,3.7.7.3.6-4.6.6-4.6l3.9,1.3-.4,2.5,7.8,2.8,1.2,1.7-.8,3.5-1.2,1.3-.5,1.7.5,2.3,1.9,1.2,3.8,1.4,2.8.9,4.7.9,2.1,2,3.1.4.8,1.2-.4,4.5,1.3,1.1-.5,1.9,1.2.8-.2,1.3h-2.6c0-.1,0,1.5,0,1.5l2.2,1.5v1.4c0,0,1.8,1.7,1.8,1.7l.5,2.4-2.5,1.3,1.5,1.4,5.6-1.6,3.5,6Z"/>
        <path id="DC" aria-label="DC" class="cls-2" d="M1048,487.9l-1-1.6-1-.8,1.1-1.6,2.1,1.5-1.2,2.5Z"/>
        <path id="AK" aria-label="Alaska" class="cls-2" d="M439.8,878.1h-.1c-.1,0-.1,0-.2-.2l-.3-2.3c0,0,0-.2.1-.3l1.6-.9-.2-1.1h-1c-.1,0-.3,0-.3-.2l-1.2-6.7-3,1.8-1.7,2.7q-.1,0-.2,0h0c-.1,0-.2,0-.2,0l-.8-1.3c0,0-.1-.2,0-.3l1.8-3.8c0,0,.1,0,.2-.2l1.2-.3-2.3-1.5-1.1-2.7-2.4-1.7-.8-1.6c-.1,0,0-.3.1-.3,0,0,.1,0,.2,0s.1,0,.2,0l.7.6-.3-.9-2.9-.5c-.1,0-.2,0-.2-.2s0-.2.1-.3l1.1-.9h-.7c-.1,0-.2-.2-.2-.4v-1.9l-.7.2h-.1q-.1,0-.2,0t-.1-.2v-1.3c0,0,.1-.2.1-.2h.2l1.7,1-1.4-1.7-.8.2h-.1c-.1,0-.2,0-.2-.2l-.8-1.5h0c-.1,0-.2-.2-.2-.2l-1.3-2.3-2.9-1.4c-.1,0-.1,0-.1-.2l-3.1-8.5v1.1c-.1,0,1.9,7,1.9,7l-.5,1.7c0,0-.1.2-.2.2l-1,.3h-.2c-.1,0-.1,0-.1-.2l-.4-2-1.7.6h-.1q-.1,0-.2,0c-.1,0-.1-.2-.1-.3l.3-1.8-1-2.6-.5,1c0,0-.1,0-.2,0h-.3l-3-2.1-.3.5,4.1,3.7q.1,0,.1.2v1.3c0,0-.1.2-.2.3l-2.5,1.3h-.3l-4.8-3.3c-.1,0-.2-.2-.1-.4l.4-.8-3.1-2.9q-.1,0-.1-.2l-.2-2.4-1.6,1.3q-.1,0-.2,0h-.2l-6.1-3.8c-.1,0-.1,0-.1-.2s0-.2.1-.2l1.3-1,.7-3.1q0,0,.1,0l-.5-.4-1.6,2.3c0,0-.1,0-.2,0l-3.6.8-3.7-1.6c-.1,0-.1,0-.2-.2l-.2-1.3-13,.5q-.1,0-.2,0l-4.6-4.6-1.3,1.3q-.1,0-.2,0-.1,0-.2,0l-2.5-2.3c-.1,0-.1-.2-.1-.3l.2-.9h-2.5c-.1,0-.2,0-.3-.2v-.3l.7-.8-2.4.7h-.1c-.1,0-.2,0-.3-.2-.1,0,0-.3.1-.4l1.3-.7h-1.2c-.1,0-.2,0-.2,0-.1,0-.1-.2-.1-.2l.4-1.8-3.9.9h-.1c-.1,0-.2,0-.2,0l-.7-1.2v1.3c0,0-.1.2-.2.3l-1,.5h-.1q-.1,0-.2,0c-.1,0-.1-.2-.1-.3l.6-2.6-3.4,3.5,1.4.6c.1,0,.1,0,.2.2v.2l-1.2,1.9,2.1-.6h.1c.1,0,.2,0,.2,0,.1,0,.1.2,0,.3l-2.6,5.6c-.1,0-.2.2-.3.2h-.1l-4.3-1-.7,3.5c0,0-.1.2-.3.2h0c-.1,0-.3,0-.3-.3v-.9c0,0-.5,1.2-.5,1.2,0,0,0,.2-.2.2l-1.4.2-1.2,2.7c0,0,0,.2-.3.2h0c0,0-.2-.2-.2-.3l.2-1.3-2.7,2.5-3.7,1.1h0q0,0-.2,0l-1-1c0,0,0-.2,0-.3l.5-1.8c0,0,0-.2.3-.2h2.1l1.3-2.3-2,1.1h-.3l-1.5-1c0,0-.2-.2,0-.4l2.6-5.6.2-4.5c0,0,0-.2,0-.2l4.6-2.5,4.6.7-2.8-1.2c0,0,0,0-.2-.2,0,0,0-.2,0-.2l2.3-2.9-2.4,1.8s0,0-.2,0h0l-2.3-.5c0,0,0,0-.2,0h0c0,0-5.6,3.9-5.6,3.9l-4,7q0,0-.2,0h0l-1.7-.5,1.8,2.4c0,0,0,.3,0,.4l-7.1,5.8-.6,2.8,2.2.2,1.9,1.9q0,0,0,.2,0,0,0,.2l-3.6,3.3-.6,1.3.5,1.2c0,0,0,.3,0,.4l-4.6,2-1.7,2.4q0,0-.2,0h0l-1.2-.4-.2,1.4c0,0,0,.2,0,.2l-3.6,2.2h.2c0,0,.2.3.2.4l-.3,2c0,0,0,.2-.2.2l-4.9,1.9v1.8c0,0,0,.3-.2.3l-2.4.4.5.4c0,0,0,.2,0,.3s0,.2-.2.2l-4.1,1.5h-.3l-1.1-.7,1.7,2.6c0,0,0,.2,0,.3,0,0,0,0-.2.2l-3.9,1.2-1,2.9c0,0,0,.2-.3.2h0c0,0-.2,0-.3-.2l-.9-2.3-7.9,4.1h-.3c0,0,0-.2,0-.3l.2-2h0l-2.5,4.2c0,0,0,0-.2,0l-2,.5h0c0,0-.2,0-.2,0h0c0,0,0,.2,0,.3s0,0-.2,0h0l-2.8-.7-.5,2c0,0,0,.2-.2.2h0c0,0-.2,0-.3-.2l-1-2.3v-.2c0,0,0,0,.2-.2l.8-.3,10.1-7.6s0,0,.2,0h0l3.4,1.2,1.5-4.3c0,0,0,0,0-.2l7.6-4,.9-2.4,2.6-1.9,3.3-8.9h-.6c0,0-.2,0-.2,0,0,0,0-.2,0-.2l.5-2.5,2.6-4-5.7,3.8h-.2q0,0-.2,0l-2-2q0,0,0-.2v-.7l-1.4,1.8.7,2.1c0,0,0,.2,0,.3l-1,1q0,0-.2,0h0c0,0-.2,0-.2,0l-3.2-4.7-3.2-.3c0,0-.3,0-.3-.3v-2.6l-1.8,2.7-7.3,2.9h0c0,0-.2,0-.3-.2,0,0,0-.3,0-.4l2.8-1.4-.9-1.8c0,0,0-.2,0-.3l.7-.7-1.9-.9c0,0,0,0,0-.2v-.2l1.5-3.2-3.5-7.5v-.3l3.2-3.8-2.1,1.4-1.4,2.3.7,1.6v.3l-3.1,5.1q0,0-.2,0l-4.1-.5q0,0-.2,0l-1.8-2c0,0,0-.2,0-.3s0-.2.2-.2h.5c0,0-.1,0-.1,0,0,0-.2,0-.2-.2l-.8-2.5v-.2l3.6-5.7h-3.3l-1.1-.5c0,0,0,0,0-.2v-.2l.6-1.2-1.1-.4-1.9,1h-.2c0,0,0,0-.2-.2l-1-2.5v-.2l.6-1.4h-2.4c0,0-.2,0-.3-.2,0,0,0-.2,0-.3l1.8-1.5-3.3,1.2h0c0,0-.2,0-.2,0,0,0,0-.2,0-.3l1.2-1.9-.7-1.1v-.2c0,0,0,0,0-.2l1.7-1,1.3-5,4.7-3.9h2.7v-1.6c0,0,0-.2,0-.2l1.8-1.3,3.7-.8,3.7-4.7c0,0,0,0,.2,0l5.9-.5,1.2-3.8-3.2-7v-.3q0,0,.2,0h2.3l.8-2.3-4.6-.7-4.7,6.5q0,0-.2,0h0c0,0-.2,0-.2-.2l-1.1-2.6-.2.8c0,0,0,.2-.2.2h0q0,0-.2,0l-2.4-1.7-6.2,1.5-6.5-1.5c0,0,0,0-.2,0l-3.8-7.4v-.2c0,0,0,0,.2-.2l2.6-.9-4.8-.8-3.9-3.9q0,0,0-.2c0,0,0-.2,0-.2l8.9-5.6,3.3.2-.9-1c0,0,0,0,0-.2s0,0,0-.2l5.9-4h3.5l1.1.5c0,0,.2,0,.2.3v3c0,0,0,.2,0,.2l-1.2.8,2,1.8,8.8,1.2,1.3-3.7-1.9-.3c0,0-.2,0-.2,0,0,0,0-.2,0-.2l.5-1.8-1-2.4c0,0,0-.3,0-.4h0c0,0,.2,0,.2,0l1.7,2.5,5,1.3,4.9-2.2-7.5-1.6-.2,1.7c0,0,0,.2-.2.2h0q0,0-.2,0l-2.8-2.8c0,0,0-.3,0-.4l1.7-2.1-.3-.7s-4.1.7-4.2.7,0,0-.2,0,0-.2,0-.3l.3-1.5-1.6,1.8q0,0-.2,0h0l-4.1-1.8c0,0,0,0-.2-.2l-1.3-5.3-2.2-2.4-12.6-8.9c0,0,0-.2,0-.3s0-.2.2-.2l2.8-1.3h0q0,0,0-.2l.3-5.1c0,0,0-.2.2-.3l11.3-1.7,4.3-5.5.5-3.4c0,0,0-.2,0-.2h.2l.9.4-1.2-1.2c0,0,0-.2,0-.3s0-.2.2-.2l1.2-.2h-.4c0,0-.2,0-.2-.2v-.3l2-3.6c0,0,0,0,.2,0h0l2.1,1.1-1.2-1.2c0,0,0-.2,0-.3l1.3-3.3c0,0,0-.2.3-.2h0l.8.3c0,0,0,0,.2,0v.2l-.4,1.1,7.9-6.2c0,0,0,0,.2,0s.2,0,.2,0l1,1.3c0,0,0,.2,0,.3l-1,2.4.8.8.7-2.8c0,0,0-.2.2-.2l1.2-.3-2.5-1.7c0,0,0,0,0-.2s0-.2,0-.2l1.3-1.5,4.1-2.6h.2c0,0,.2,0,.2,0,0,0,0,.3,0,.4l-2.3,2.3.9.6.2-1.3c0,0,0-.2.2-.2l6-.7,6.3-7.5q0,0,.2,0h0l5.8,3.1c0,0,0,0,0,.2s0,.2,0,.2l-3.6,4.3,3.9,1.4.3.2-.6-3.9c0,0,0-.2,0-.3l2-1.5s0,0,.2,0,.2,0,.2,0l3.9,4.7,4.9-2.2h0c0,0,.2,0,.2,0l1.4,2.4,3.7-.5c0,0,.2,0,.2,0,0,0,0,.2,0,.2l-.5,2.3,1.3.7,1.8.8c0,0,0,0,.2.2v.2l-.5.8,11.4-.2,20.4,7.2,10.1-1.8q.1,0,.2,0l9.7,6.8,1.1-1.1q.1,0,.2,0h.1c.1,0,.2,0,.2.3l-.3,112.8,4.9,1.2,3.9-1.5h.1q.1,0,.2,0c.1,0,.1.2.1.3l-.3,2.7,4.2,4.7.5.5.3.2c.1,0,.3.2.4.4,0,0,.1,0,.2.2,0,0,.2,0,.3.2v.2c.2,0,.3.2.3.3l.2.2.9,1.1,1.2,2.8,3.8-2.1,1.9-3.9,4.4-2.4h.1c.1,0,.2,0,.2,0l5.1,9.2,3,1.9,9.4,19.2,9.3,5.2c.1,0,.1.2.1.3l-.3,8.6c0,0-.1.2-.1.2l-3.8,2.3c0-.2-.2,0-.2,0M397.5,831.1c0,0,.1-.2.2-.2l.6-.3-1.2-1,.4,1.5ZM340.8,815l1.8-5v-2.4l-1.8,7.4ZM288.6,760.2l.4-.8-1.5-.2,1.1,1Z"/>
        <path id="VI" aria-label="US Virgin Island" class="cls-2" d="M1238.1,896.2s0,0,0,0h-.2c0,0,0-.2,0-.2h0v-.3h0c0,0,.2-.3.2-.3l.2-.3c0,0,0,0,.2,0h0q0,0,.2,0c0,0,0,0,0,.2v.2l-.3.6h0c0,0,0,.2,0,.2-.2-.1-.3-.1-.3-.1ZM1238.5,895.2h0c0,0,0,0,0,0ZM1238.5,895.2h0ZM1250.5,890.8h0c0,0,0-.2,0-.2h-1.2c0,0-.2-.2-.2-.2h-.8c0,0,0-.2,0-.2h-.5c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v.2h0c0,0,0,.2,0,.2h0c0,0,.2,0,.2,0h.2c0,0,.2,0,.2,0h0c0,0,0,.2,0,.2h0c0,0,0,0,0,0h0c0,0,0-.2,0-.2h.8c0,0,.2,0,.2,0h0c0,0,.2,0,.2,0h.2c0,0,.2-.2.2-.2h.2ZM1248.5,891.7h-.3c0,0,0-.2,0-.2h0c0,0-.2,0-.2,0h-.4l-.3-.2h0v-.5c0,0,.2,0,.2,0l.4-.3h.5c0,0,.2.2.2.2h.6l.5.2h.9l.3.2h0c0,0,0,.2,0,.2h-.3c0,0-.2.2-.2.2h-.3c0,0-.2,0-.2,0h-.3c0,0-.2,0-.2,0h-.3c0,0-.3.2-.3.2ZM1248.4,891.5h0c0,0,.2-.2.2-.2h.2c0,0,.2,0,.2,0h.3c0,0,.2,0,.2,0h.2c0,0,.2,0,.2,0h.3c0,0,0-.2,0-.2h-1.4c0,0-.4-.2-.4-.2h-.5c0,0,0-.2,0-.2h-.2l-.3.3h0v.2h0c0,0,.2.2.2.2h.6c0,0,0,0,0,0h.2c0,0,.1.3.1.3ZM1261.1,898h0l-.2-.2h-1.2c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0,0,0,0h0c0,0-.2.2-.2.2h-.2c0,0-.2,0-.2,0h-.6c0,0-.2-.2-.2-.2h0c0,0,0-.2,0-.2h0c0,0,0,0,0,0v.2h-.2c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h-.5c0,0-.2,0-.2,0h-.4c0,0,0,.2,0,.2h0c0,0-.2,0-.2,0h-1.3c0,0,0,0,0,0h0v.3h0c0,0-.2.2-.2.2h-1.4c0,0,0-.2,0-.2h0c0,0-.2,0-.2,0h0c0,0,0-.2,0-.2h0c0,0,0-.3,0-.3v-.2c0,0-.2-.2-.2-.2v-.2c0,0-.2,0-.2,0h-.2c0,0,0,.2,0,.2h-1c0,0,0,.2,0,.2h0c0,0-.2,0-.2,0h0c0,0-.2,0-.2,0h-.2c0,0-.2,0-.2,0h-.7c0,0-.2,0-.2,0h-.2c0,0-.2-.2-.2-.2h0c0,0,0-.2,0-.2h-.3c0,0,0,.2,0,.2h-.2c0,0-.2,0-.2,0h-1c0,0-.2.2-.2.2h-1.4c0,0-.2-.2-.2-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h-.8c0,0-.2-.2-.2-.2h-.8c0,0,0-.2,0-.2h-.5c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h-.4c0,0-.2-.2-.2-.2h-.2c0,0-.2,0-.2,0h-1.1c0,0-.2,0-.2,0h-.4c0,0,0-.2,0-.2h0c0,0,0,0,0,0h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h-.4c0,0-.2-.2-.2-.2h-.6c0,0,0-.2,0-.2h-.3c0,0,0,.2,0,.2h0v.3h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h-.2c0,0-.2.2-.2.2h-.8c0,0-.2-.2-.2-.2h-.9v.3h0c0,0,0,.3,0,.3h0c0,0,0,.3,0,.3h0c0,0,0,.2,0,.2h0c0,0-.2.2-.2.2h0c0,0,0,.2,0,.2h0v.2h0v.2h0q0,0,0,.2h-.5c0,0,0-.2,0-.2h0c0,0,0,0,0,0h-.3c0,0-.2-.2-.2-.2h0c0,0,0,0,0,0h0c0,0,0,.2,0,.2h-.8c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0v-.2h0v-.2h0c0,0,0,0,0,0h-.5c0,0,0,0,0,0h-.3c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h-.2c0,0,0-.2,0-.2h0c0,0,0-.3,0-.3h0v-.2h0c0,0,0-.2,0-.2h-.3c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0-.2-.2-.2-.2h-.6c0,0,0-.2,0-.2h0v-.2h0v-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0v-.2h0v-.2h0c0,0,0-.2,0-.2h0v-.2h0v-.5c0,0-.2-.2-.2-.2h0c0,0,0,0,0,0h0c0,0,0,.2,0,.2h-.3c0,0,0-.2,0-.2h0v-.2c0,0-.2-.2-.2-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0v-.2h0c0,0,0-.2,0-.2h0c0,0,0,0,0,0h-.3c0,0,0,.2,0,.2h-.2c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v.2h0c0,0,0,.2,0,.2h0v.6c0,0,0,.2,0,.2h0v.2q0,0-.2,0h0q0,0,0,0h-.2c0,0,0-.2,0-.2h0c0,0,0,0,0,0h-.4c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2v.2h-.2c0,0,0,0,0,0,0,0,0,0,0,0h0v-.3h0v-.2c0,0,0,0,0,0h0v-.2h0v-.5h0v-.2h.2v-.2h-.3c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h-.6c0,0-.2,0-.2,0h-1.6c0,0-.2-.2-.2-.2h0c0,0,0-.2,0-.2h-.4c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h-.2c0,0-.2,0-.2,0h0c0,0,0,0,0,0h-.4c0,0-.2.2-.2.2h-.9c0,0-.2,0-.2,0h-.3c0,0-.2,0-.2,0h-.4c0,0,0,.2,0,.2h0c0,0-.2.2-.2.2h-.2c0,0-.2,0-.2,0h-.4c0,0-.2.2-.2.2h-1.5c0,0,0-.2,0-.2h-.6c0,0-.2.2-.2.2h-.5c0,0,0,.2,0,.2v.2c0,0-.2.2-.2.2v.2c0,0-.2.2-.2.2v.2h-.2c0,0,0,.2,0,.2h-.2c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0-1.4-.2-1.4-.2h-.3c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h-.2c0,0,0,.2,0,.2h0c0,0-.2.2-.2.2h-.7c0,0-.2.2-.2.2h-.6c0,0-.2,0-.2,0h-.3c0,0,0,.2,0,.2h-.2c0,0,0,.2,0,.2h0c0,0-.2.2-.2.2h-.7c0,0-.2,0-.2,0h-.4c0,0-.2-.2-.2-.2h0c0,0,0-.2,0-.2h0c0,0,0,0,0,0h-.3c0,0,0,0,0,0h0c0,0,0-.2,0-.2h-.4c0,0-.2,0-.2,0h-.3q0,0,0,0h-.8c0,0,0-.2,0-.2h-.2q0,0,0,0h-.4c0,0,0-.2,0-.2h0c0,0-.2,0-.2,0h-.4c0,0,0-.2,0-.2h-.6c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h-.5c0,0,0-.2,0-.2h0c0,0-.2,0-.2,0h-.6c0,0-.2.2-.2.2h-.4c0,0-.2,0-.2,0h-.2c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2v.4h0v.2h-.2q0,0,0,0h-.4c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v.4h0v.2h0v.2c0,0-.2.2-.2.2v.2c0,0-.2.2-.2.2h0v.2h0v.5h0v.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v1.3c0,0,.2,0,.2,0h0v.3h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v.2c0,0,.2.2.2.2v.2c0,0,.2.2.2.2v.2h0v.4h0c0,0,0,.2,0,.2h0v.2h0v.2h0v.4c0,0,.2.2.2.2h0v.7c0,0,.2.2.2.2h0c0,0,0,.2,0,.2h0v.6c0,0,.2.2.2.2v.2h0v.2h0v.2h0c0,0,0,.2,0,.2h0c0,0-.2.2-.2.2h0c0,0,.2,0,.2,0h0s0,0,0,0v.4h0v.4h0v.6h0v.2h0v.2h0c0,0,0,.2,0,.2h0c0,0,0,.3,0,.3h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0-1.5.5-1.5.5v.2h-.2c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v.2h0v.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v.2h0v.2h0c0,0,0-.1,0-.1h0v-.2h.2c0,0,.3-.3.3-.3h0c0,0,.2-.2.2-.2h0c0,0,0-.2,0-.2h.3c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h.2c0,0,.2,0,.2,0h.2c0,0,0,.2,0,.2h.6c0,0,0,.2,0,.2h0c0,0,0,0,0,0h0c0,0,.2,0,.2,0h.4c0,0,0-.2,0-.2h.2c0,0,.2,0,.2,0h.2c0,0,0,0,0,0h0c0,0,.2-.2.2-.2h0c0,0,0-.2,0-.2h.2c0,0,.2,0,.2,0h1c0,0,0,.2,0,.2h.5c0,0,.2-.2.2-.2h.2c0,0,0,0,0,0h0c0,0,.2-.2.2-.2h.3c0,0,.2,0,.2,0h1.7c0,0,.2,0,.2,0h.2c0,0,.2,0,.2,0h.4c0,0,0,.2,0,.2h0c0,0,0,.3,0,.3h0v.2h0v.2h0v.8h0c0,0,0,0,0,0h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0,0,0,0h.2c0,0,0,0,0,0h.2c0,0,.2-.2.2-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h.2c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h.2c0,0,0,0,0,0h.2c0,0,0-.2,0-.2h.3c0,0,0,0,0,0h0c0,0,0-.2,0-.2h0q0,0,0,0h.7c0,0,.2-.2.2-.2h.6c0,0,0,0,0,0h0c0,0,0-.2,0-.2h0c0,0,.2-.3.2-.3h.2c0,0,.3-.2.3-.2h.2c0,0,.4,0,.4,0h.3c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h1c0,0,.2.2.2.2h.9c0,0,.2-.2.2-.2h.2c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h.8c0,0,.2,0,.2,0h.2c0,0,.2,0,.2,0h.2c0,0,0,.3,0,.3h0c0,0,0,.2,0,.2h.3c0,0,0-.2,0-.2h0c0,0,0,0,0,0h.4c0,0,.2.2.2.2h.6c0,0,.2.2.2.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h.4c0,0,.2.2.2.2h.2c0,0,0,.2,0,.2h0c0,0,.2.2.2.2h0c0,0,0,.2,0,.2h0v-.5h0v-.2h0c0,0,0-.3,0-.3h0v-.2h0v-.2h0c0,0,0-.3,0-.3h0v-.2c0,0-.2,0-.2,0h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h-.4c0,0-.2-.2-.2-.2h0c0,0,0-.3,0-.3h0v-.2h0c0,0,0-.2,0-.2h.5c0,0,0,.3,0,.3h0v.2h0c0,0,0,.3,0,.3h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v.2c0,0,.2.2.2.2v.2c0,0,.2,0,.2,0h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,0,0,0h0c0,0,0-.2,0-.2h0v-.2h0v-.2h0v-.2h.2c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h0c0,0,.2,0,.2,0h.2c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v.2h0v.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,0,0,0h0c0,0,0-.2,0-.2h0v-.2h0c0,0,0-.2,0-.2h0v-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h.4c0,0,0,0,0,0h0q0,0,0,.2v.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v.6c0,0,.2.2.2.2h0v.2h0c0,0,0,.2,0,.2h.3c0,0,.2-.2.2-.2h0v-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0v-.2c0,0-.2-.2-.2-.2h0c0,0,0-.2,0-.2h0v-.3h0v-.2s0,0,0,0h0q0,0,0,0h.2c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v.2h0v.4h0v.8c0,0,.2,0,.2,0h0c0,0,0,.3,0,.3h0v.2c0,0,.2,0,.2,0h0c0,0,0,.2,0,.2h0c0,0,0-.2,0-.2h0v-.2h0c0,0,0-.3,0-.3v-.2c0,0-.2,0-.2,0h0v-.2h0v-.2h0v-.2h.2c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2v-.2c0,0,0,0,0,0v-.2h0v-.2h0v-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h.8c0,0,.2,0,.2,0h0c0,0,.2,0,.2,0h.6c0,0,.2.2.2.2h.3c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,.2,0,.2,0h.4c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,0,0,0h0c0,0,0-.3,0-.3h0c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h0c0,0,.2-.2.2-.2h.2c0,0,.3-.2.3-.2h0c0,0,.2-.3.2-.3h0c0,0,0-.2,0-.2h.4c0,0,.2,0,.2,0h.4c0,0,0,.2,0,.2h0v.3h0c0,0,0,0,0,0h0c0,0,.2,0,.2,0h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h.2c0,0,.2,0,.2,0h.2c0,0,.2.2.2.2h0c0,0,0,.2,0,.2h.2c0,0,0-.2,0-.2h0c0,0,.2,0,.2,0h.2c0,0,.2,0,.2,0h.5c0,0,0-.2,0-.2v-.4h0c0,0,0-.3,0-.3h0c0,0,0-.2,0-.2h.2c0,0,.2,0,.2,0h.2c0,0,0,0,0,0h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h.3c0,0,.2-.2.2-.2h.4c0,0,0,0,0,0h0c0,0,0,0,0,0h0q0,0,0,0h.3c0,0,0,.2,0,.2h.6c0,0,.2-.2.2-.2h0c0,0,0-.2,0-.2h0v-.2h0v-.2h0v-.2h.2c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h0c0,0,.2,0,.2,0h.4c0,0,.2-.2.2-.2h.6c0,0,.2-.2.2-.2h0c0,0,0-.2,0-.2h1.2c0,0,0,.2,0,.2h0c0,0,0,0,0,0h0c0,0,.2,0,.2,0h.8c0,0,0,.2,0,.2h.3c0,0,.2-.2.2-.2h.2c0,0,0-.2,0-.2h0v-.4h0v-.2h.2c0,0,.2-.2.2-.2h0c0,0,0-.2,0-.2h.2c0,0,.2-.2.2-.2h0c0,0,0-.2,0-.2h0c0,0,0,0,0,0h.3c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h.5c0,0,0,.2,0,.2h.2q0,0,0,0h.3c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h.5c0,0,0,0,0,0h0c0,0,.2,0,.2,0h.2c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,0,0,0h0v-.5h0v-.4h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2v-.2c0,0,.2-.2.2-.2v-.2h.2c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0,0,0,0h.4c0,0,.2,0,.2,0h.3c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h.2c0,0,.2-.2.2-.2h.3c0,0,.2,0,.2,0h.5c0,0,.2,0,.2,0h.2c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,0,0,0h0c0,0,0-.2,0-.2h.2c0,0,.2-.2.2-.2h.2c0,0,.2-.2.2-.2h0c0,0,0-.2,0-.2h.5c0,0,0,.3,0,.3h0c0,0,0,0,0,0h.2c0,0,.2-.2.2-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h.7v-.3h0c0,0,0-.2,0-.2h0v-.2h0c0,0,4.1.5,4.1.5ZM1184.9,916.9h-.2c0,0-.2-.6-.2-.6h0c0,0-.2-.3-.2-.3v-.3c0,0,0,0,0,0v-.5c0,0,.2,0,.2,0h0c0,0,.2-.2.2-.2h0c0,0,.5-.5.5-.5l.3-.4h0c0,0,0-.2,0-.2l.2-.2h0c0,0,0-.3,0-.3h0c0,0,0-.2,0-.2h0c0,0,0-.4,0-.4l.3-.4v-.3c0,0,.5-.5.5-.5h0v-.2h0c0,0,0-.2,0-.2l.2-.2.2-.3h0c0,0,0-.4,0-.4h0c0,0,0-.2,0-.2h0v-1.7h0c0,0,0,0,0,0h-.3c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h0c0,0,0-.2,0-.2v-.2l-.2-.7v-.4c0,0-.3-.3-.3-.3l-.2-.5v-.2c0,0,0-.2,0-.2v-.3c0,0,0-.2,0-.2v-.2c0,0-.2-.2-.2-.2h0c0,0,0-.3,0-.3v-.2c0,0,0-.2,0-.2v-.2c0,0-.2-.4-.2-.4v-.3c0,0-.2,0-.2,0h0c0,0-.3-.5-.3-.5h0v-.3h0c0,0,0-.3,0-.3v-.2c0,0-.2-.4-.2-.4v-.7h0c0,0,.2-.4.2-.4h0c0,0,0-.2,0-.2h0v-.3l.2-.6v-.3c0,0,0,0,0,0v-.3c0,0,0-.2,0-.2v-.7c0,0,.2-.2.2-.2h0c0,0,.5-.5.5-.5h0l.2-.2h.2c0,0,.2,0,.2,0h.3c0,0,0-.3,0-.3v-.4h0c0,0,0-.2,0-.2h.2c0,0,0-.2,0-.2l.3-.2h.5c0,0,.2,0,.2,0l.5-.2h.6c0,0,0,.2,0,.2h0c0,0,.3,0,.3,0h.4c0,0,.3.3.3.3h0c0,0,0,.2,0,.2h0c0,0,.2,0,.2,0h.7c0,0,0,.2,0,.2h.6c0,0,0,.2,0,.2h0c0,0,0,0,0,0h0c0,0,0,0,0,0h.2c0,0,0,0,0,0h.6c0,0,.3,0,.3,0h0c0,0,.2,0,.2,0h.3c0,0,0,0,0,0h.2c0,0,0,.2,0,.2h.2c0,0,.2,0,.2,0h.3c0,0,0,.2,0,.2h0c0,0,.3.2.3.2h.6c0,0,.2,0,.2,0h.7c0,0,0-.2,0-.2h0c0,0,0,0,.2-.2h0c0,0,.2-.2.2-.2h.2c0,0,.2,0,.2,0h.4c0,0,.2,0,.2,0h.2c0,0,.5-.3.5-.3h.4c0,0,.3-.3.3-.3h.2c0,0,.6-.5.6-.5h.3c0,0,0-.2,0-.2h.2c0,0,0-.2,0-.2h.2c0,0,0-.2,0-.2h.3c0,0,.2-.3.2-.3l.2-.6h0c0,0,.2-.4.2-.4h0c0,0,.5-.2.5-.2h.4c0,0,.2,0,.2,0h.2c0,0,0,.2,0,.2h1.2l.5-.2h.5c0,0,0-.2,0-.2l.2-.3h.2c0,0,.2-.2.2-.2h.4c0,0,.4,0,.4,0h.3c0,0,.2,0,.2,0h.6c0,0,0-.2,0-.2h.8c0,0,.3.2.3.2h.2c0,0,.2.3.2.3h.2c0,0,.2,0,.2,0h0c0,0,0,.2,0,.2h.3c0,0,.2,0,.2,0h1.1c0,0,0,0,0,0h.4c0,0,.2,0,.2,0h.2c0,0,.2.3.2.3h0c0,0,.2,0,.2,0h0v.4c0,0-.2,0-.2,0v.2c0,0,0,.4,0,.4h0v.5c0,0,0,.2,0,.2h0c0,0,0-.2,0-.2h0c0,0,.2-.4.2-.4h.2c0,0,.2,0,.2,0h.2l.2.3h.2v-.9c0,0-.1-.3-.1-.3h0v-.3h0c0,0-.2-.2-.2-.2h0c0,0,0-.3,0-.3h0c0,0,.3-.3.3-.3l.6-.3h.4c0,0,0,.2,0,.2h0c0,0,0,.3,0,.3h0c0,0,.2.3.2.3h0c0,0,.2.3.2.3h0c0,0,0,.2,0,.2h0c0,0,0,.4,0,.4h0c0,0,0,.2,0,.2h.2c0,0,.2-.2.2-.2h.3c0,0,0,.4,0,.4v.2h0v.3h0c0,0,0,.3,0,.3v.4c0,0,.2,0,.2,0h0c0,0,.4.4.4.4v.2c0,0,0,.2,0,.2v.2c0,0,.2,0,.2,0h.3c0,0,.2,0,.2,0h.2c0,0,.2.2.2.2h0c0,0,0,.2,0,.2l.3.2h.4c0,0,0,.3,0,.3v.2h0c0,0,0,.2,0,.2l.3.2h.2l.2.2h0c0,0,0,.2,0,.2h0c0,0,0,0,0,0h.6c0,0,.2,0,.2,0h.4v.5h0c0,0,0,.2,0,.2l.2.2h0c0,0,0,.2,0,.2h.2c0,0,.2,0,.2,0h.6c0,0,.2-.2.2-.2h.3c0,0,.2.2.2.2h.2c0,0,0,0,0,0h.3c0,0,0,.2,0,.2h0c0,0,.2,0,.2,0h0v-.6c0,0,.2,0,.2,0h0c0,0,.2-.2.2-.2h0c0,0,0-.2,0-.2h0c0,0,0-.3,0-.3h0v-.5c0,0,0,0,0,0h.2c0,0,.2,0,.2,0h.4l.5.2h.8c0,0,.2-.2.2-.2h0c0,0,0-.3,0-.3l.2-.2h0c0,0,.2-.4.2-.4v-.2h0c0,0,.4-.3.4-.3h0c0,0,0,.2,0,.2h.2c0,0,.2,0,.2,0h.5c0,0,0,0,0,0h0c0,0,.2-.4.2-.4v-.2h.3c0,0,0,.2,0,.2h.2c0,0,.2,0,.2,0h.4c0,0,.2,0,.2,0h.8c0,0,.3.2.3.2h.3c0,0,.2,0,.2,0l.2-.2h0v-.2h0v-.3h0c0,0,.2-.2.2-.2h.3c0,0,.2,0,.2,0h.2c0,0,0,.2,0,.2h.4l.5.2h.5c0,0,.2,0,.2,0h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,.2.2.2.2h1.4c0,0,0,0,0,0h1c0,0,0,0,0,0h0c0,0,0-.3,0-.3h.2c0,0,.2,0,.2,0h.2c0,0,0,.2,0,.2h0c0,0,.2.2.2.2h.5c0,0,.2,0,.2,0h.5c0,0,0,0,0,0h.4c0,0,.2,0,.2,0l.4-.3h.9c0,0,.2-.1.2-.1h.2c0,0,0,.3,0,.3v.3h0s0,0,0,.2v.2c0,0,.3.3.3.3h0c0,0,.2,0,.2,0h.2c0,0,0,.2,0,.2h0c0,0,.2,0,.2,0h1.2c0,0,0-.2,0-.2v-.2h0c0,0,.2,0,.2,0h0c0,0,0,0,0,0h1c0,0,.2,0,.2,0h0c0,0,0-.2,0-.2h0c0,0,.2,0,.2,0h.6c0,0,.4,0,.4,0h0c0,0,.3-.3.3-.3h0c0,0,0-.4,0-.4h.2l.3.3h0c0,0,.2.2.2.2h.8c0,0,.2-.2.2-.2h0c0,0,.2,0,.2,0h0c0,0,0,.2,0,.2l.2.2h0c0,0,.6,0,.6,0h.4c0,0,0,.2,0,.2h0c0,0,0,.3,0,.3v.4c0,0-.4.2-.4.2h0v.3h0c0,0-.6.2-.6.2h-.2c0,0,0,.2,0,.2l-.2.2h-.2c0,0,0,.2,0,.2l-.3.4h0v.2h-.3c0,0,0,.2,0,.2h-.2c0,0,0-.4,0-.4h0c0,0-.2,0-.2,0l-.3.2h-.3c0,0,0,0,0,0h-.3c0,0,0,.2,0,.2h0c0,0-.2,0-.2,0l-.4-.3-.2-.2h-.4c0,0-.2,0-.2,0h-.5c0,0-.2,0-.2,0h-.3c0,0,0,.2,0,.2h0c0,0-.3.2-.3.2h-.5c0,0-.2,0-.2,0h-.2c0,0-.2.2-.2.2h0c0,0,0,.2,0,.2h0c0,0-.3.8-.3.8l-.2.2h0c0,0,0,.2,0,.2h0c0,0,0,.5,0,.5v.4c0,0-.2.2-.2.2h0v.2h-.3c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h-.2c0,0-.2,0-.2,0h0c0,0-.2,0-.2,0h0c0,0-.2,0-.2,0h-.4c0,0-.4.6-.4.6v.2c0,0-.3,0-.3,0h-.3c0,0-.2,0-.2,0h0c0,0-.2-.2-.2-.2h-.3c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h-.2c0,0-.2,0-.2,0h-.2c0,0,0,.2,0,.2h-.3c0,0,0,.2,0,.2h0c0,0-.3.3-.3.3h0c0,0,0,.3,0,.3v.4c0,0-.2,0-.2,0l-.5.2h0c0,0-.2.2-.2.2h-.3c0,0-.2-.2-.2-.2h-.6c0,0-.2,0-.2,0h0c0,0-.2,0-.2,0h0c0,0,0-.2,0-.2h-.2c0,0-.2,0-.2,0h-.7c0,0-.3.3-.3.3h-.3c0,0-.2,0-.2,0h-.5c0,0-.4.2-.4.2h-.3c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2v.2c0,0,0,.2,0,.2v.4c0,0-.2,0-.2,0h-.2c0,0,0,0,0,0h-.2c0,0-.3,0-.3,0h-.3c0,0,0-.2,0-.2h-.2c0,0-.2,0-.2,0h-.2c0,0-.2,0-.2,0h0c0,0,0,0,0,0h0c0,0-.2.2-.2.2h-.4c0,0-.7.5-.7.5h0c0,0,0-.2,0-.2h-.5c0,0,0,.2,0,.2h0v.2h0v.3h0c0,0-.2.2-.2.2h-.8c0,0-.3,0-.3,0h0c0,0-.3.3-.3.3h-.2l-.5-.2h-.2c0,0-.2,0-.2,0h-.2c0,0,0,.2,0,.2h0c0,0-.3.3-.3.3h0c0,0-.2.2-.2.2h-.3c0,0-.2,0-.2,0v-.2c0,0,0-.2,0-.2h0c0,0-.2-.2-.2-.2h-.5c0,0-.2,0-.2,0h0c0,0,0,.2,0,.2l-.2.2h0c0,0-.6.4-.6.4h0c0,0-.2.2-.2.2h0c0,0,0,.2,0,.2h0v.5h-.5c0,0-.2-.3-.2-.3l-.2-.3h0c0,0-.4,0-.4,0h-.2c0,0-.4-.4-.4-.4h0c0,0-.2,0-.2,0h-.4c0,0-.7,0-.7,0h0c0,0-.2,0-.2,0h-.3c0,0-.2,0-.2,0h-.5c0,0,0,.2,0,.2l-.2.2h-.2c0,0,0,.2,0,.2v.8l-.2.4-.3.3h0v.5h0c0,0,.2.4.2.4v.2c0,0,0,.2,0,.2v.2c0,0,0,.4,0,.4l-.2-.2h0c0,0,0-.2,0-.2l-.2-.5h0c0,0,0-.4,0-.4v-.2c0,0,0-.5,0-.5v-.3c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h-.2v.6c0,0,.2,0,.2,0l.2.5h0c0,0,.2.4.2.4h0c0,0,0,.3,0,.3h-.2c0,0-.2.2-.2.2h-.2c0,0,0,0,0,0h-.2c0,0,0-.2,0-.2h0v-.6c0,0-.2-.3-.2-.3h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2v-.2c0,0,0-.2,0-.2h-.2c0,0,0,.2,0,.2h-.2c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2v.2h0c0,0,0,.2,0,.2h0c0,0,0,.3,0,.3v.4c0,0-.2,0-.2,0h-.3c0,0,0-.3,0-.3h0c0,0,0-.2,0-.2h0v-.5c0,0-.2,0-.2,0v-.2c0,0-.2,0-.2,0h0c0,0-.2,0-.2,0h0c0,0-.2.2-.2.2h0c0,0-.2.3-.2.3h0c0,0,0,.3,0,.3h0c0,0,0,.2,0,.2v.2c0,0,0,.2,0,.2h-.2c0,0,0,0,0,0h0c0,0-.2-.3-.2-.3h0c0,0,0-.2,0-.2v-.2c0,0-.3-.5-.3-.5h0c0,0,0-.2,0-.2h0c0,0-.2-.3-.2-.3v-.2c0,0-.2-.3-.2-.3v-.2c0,0-.2-.2-.2-.2h0c0,0,0,0,0,0h-.3c0,0,0,.2,0,.2v.4c0,0,.2,0,.2,0h0c0,0,.2.2.2.2h.2c0,0,0,.2,0,.2l.3.4.2.3v.2c0,0,.2.3.2.3v.2c0,0,0,.2,0,.2l.2.5v.8c0,0-.2,0-.2,0h0l-.2-.2.2-.2h0c0,0-.3-.2-.3-.2h-.2c0,0-.2,0-.2,0h-.2c0,0-.3-.4-.3-.4h0c0,0-.2-.2-.2-.2h-.6c0,0,0,0-.2-.2h-.2c0,0,0,.2,0,.2h-.2c0,0-.2.2-.2.2h-.2c0,0-.2-.4-.2-.4v-.2c0,0-.2,0-.2,0h-.2c0,0-.2,0-.2,0h0c0,0-.2,0-.2,0h-.8c0,0,0,.2,0,.2l-.5.2h0c0,0,0,0,0,0h-.6l-.7-.2h-.7c0,0,0,.3,0,.3h0c0,0-.2.2-.2.2h-.2c0,0-.5,0-.5,0h-.2c0,0-.5.3-.5.3l-.4.3-.3.2h-.3c0,0-.4,0-.4,0l-.5.2h-.6c0,0-.2.4-.2.4h0c0,0,0,0,0,0h0c0,0,0,0,0,0h-.1c0,.1-.2.1-.2.1h-.4c0,0-.3.3-.3.3h-.2c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0-.3.2-.3.2h-.3c0,0,0,0,0,0h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0-.3.3-.3.3h-.2c0,0,0-.2,0-.2v-.2c0,0,0-.2,0-.2v-.3c0,0,0-.3,0-.3v-.2c0,0-.2,0-.2,0h0c0,0-.2-.2-.2-.2h-.5c0,0,0,0,0,0h-.5c0,0-.6,0-.6,0h-1.2c0,0-.2,0-.2,0h-.2c0,0,0,.2,0,.2h-.4c0,0,0,0,0,0h-.3c0,0-.2,0-.2,0h0c0,0-.3,0-.3,0h0c0,0-.2-.2-.2-.2h-1.1l-.2.2h-.3c0,0-.2,0-.2,0h0c0,0-.2,0-.2,0h0c0,0-.2.2-.2.2h-.3c0,0-.2,0-.2,0h-.4c0,0,0,0,0,0h0c0,0,0-.2,0-.2h-.8c0,0,0-.2,0-.2h-.3c0,0-.5.5-.5.5h-.2c0,0-.3.3-.3.3l-.3.4h-.3c0,0,0,.2,0,.2h0l-.2.3h0c0,0-.2,0-.2,0l-.3.2h-.2c0,0,0,.2,0,.2l-.4.3v.2c0,0,0,.2,0,.2h0ZM1184.5,915.8l.2.3v.3h0s0,0,0,0h0c0,0,.5-.4.5-.4h.3c0,0,0-.2,0-.2h.4l.4-.4h.3c0,0,.3-.5.3-.5l.3-.2h.3c0,0,.2-.3.2-.3h.2c0,0,.2-.2.2-.2h.5c0,0,0,0,0,0h.7c0,0,.2.2.2.2h1c0,0,0-.2,0-.2h.2c0,0,0,0,0,0h.2s0,0,0,0h0c0,0,.2,0,.2,0l.2-.2c0,0,.2,0,.2,0h1.4c0,0,.2,0,.2,0h.6c0,0,0,0,0,0h.4c0,0,.2-.2.2-.2h.3c0,0,0,0,0,0h1.6c0,0,.3,0,.3,0h.3q0,0,.2,0h.6c0,0,.2.2.2.2h0v.5c0,0,0,.2,0,.2h0c0,0,0,.4,0,.4h0v.2h.2c0,0,0-.2,0-.2h0q0,0,0-.2h0c0,0,.2-.2.2-.2h0c0,0,0,0,0,0h0q0,0,.2,0h.3c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h.2c0,0,.3-.3.3-.3h.3c0,0,0,0,0,0h.3c0,0,0-.2,0-.2h.3c0,0,.2-.1.2-.1h0c0,0,0,0,0,0h.9c0,0,.4,0,.4,0h.4c0,0,0-.2,0-.2h0c0,0,.3-.3.3-.3h.2c0,0,.6-.3.6-.3h.7c0,0,0,0,0,0h0c0,0,0-.2,0-.2h1.2c0,0,.3.2.3.2h.7c0,0,.2-.2.2-.2h.3c0,0,0-.2,0-.2h0c0,0,0,0,0,0h1c0,0,.2,0,.2,0h.2c0,0,0,0,0,0q0,0,.2,0h0v.2h0c0,0,0,.3,0,.3h.2c0,0,.2-.3.2-.3q0,0,.2,0h.5c0,0,.2,0,.2,0h.4c0,0,0,.2,0,.2h0l.3.3h.6c0,0,.2.2.2.2h0c0,0,.3.3.3.3h0v-.4h0c0,0,0-.5,0-.5h0c0,0,0-.2,0-.2l-.2-.5-.2-.2-.4-.4h-.3c0,0-.2-.2-.2-.2,0,0,0,0,0,0h0v-.4c0,0,0,0,0,0v-.2h0c0,0,0-.3,0-.3h0c0,0,0,0,0-.2h.6c0,0,0,.2,0,.2v.2c0,0,.2.2.2.2l.2.4.2.2h0c0,0,0,.2,0,.2v.2c0,0,.3.5.3.5h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2v-.4c0,0,.2-.2.2-.2h0c0,0,.2-.3.2-.3h.2c0,0,0-.2,0-.2h0q0,0,0,0h.4c0,0,0,.2,0,.2h0c0,0,.2.1.2.1h0c0,0,0,.2,0,.2h0c0,0,0,.3,0,.3v.2h.2q0,0,0,.2h0c0,0,0-.1,0-.1h0c0,0,0-.2,0-.2h0c0,0,0-.3,0-.3h0v-.2h0c0,0,0-.2,0-.2,0,0,0-.2,0-.3h0c0-.2,0-.2.2-.2h.3q0,0,.2,0h0c0,0,0,.2,0,.2v.3c0,0,.2,0,.2,0h.2c0,0,0,.3,0,.3v.2h0v.2l.2.5h0c0,0,0,0,0,0h0c0,0,0-.2,0-.2h0l-.2-.2v-.2c0,0-.3-.4-.3-.4h0v-.5c0,0,0,0,0,0v-.2c0,0,0,0,0-.2h0q0,0,.2,0h.2q0,0,0,0h0c0,0,0,.2,0,.2,0,0,0,0,0,0v.2c0,0,.2,0,.2,0h0v.6c0,0,0,0,0,0h0l.3-.3v-.3c0,0,0,0,0,0v-.6h0c0,0,0-.2,0-.2,0,0,0,0,0,0h0c0,0,.3-.4.3-.4h.5c0,0,.2,0,.2,0h.5c0,0,0,0,0,0h.4c0,0,.2,0,.2,0h.8c0,0,.2,0,.2,0h.2c0,0,.4.4.4.4h.5q0,0,0,0h0c0,0,.4.5.4.5h0v-.2c0,0,.2-.2.2-.2h0c0,0,.2-.2.2-.2h.2c0,0,.3-.3.3-.3l.6-.2.3-.2.3-.2h.6c0,0,0,0,0,0h.2c0,0,.2.2.2.2h0c0,0,0,.2,0,.2v.2h.5q0,0,0-.2l.3-.2h0c0,0,.2-.2.2-.2h.2c0,0,.3,0,.3,0h.4c0,0,.2.2.2.2h0l.4-.2h.5c0,0,.2-.2.2-.2h.5v-.2h0c0,0,0-.2,0-.2,0,0,0,0,0,0h.2c0,0,.2-.2.2-.2h.2c0,0,.2,0,.2,0h.2s0,0,0,0h0c0,0,.3-.1.3-.1l.3-.2h.2c0,0,0,0,0,0h0c0,0,.2-.2.2-.2h1.2l.3.2h.4c0,0,0-.2,0-.2h0v-.2h0v-.2h0v-.5c0,0,.2,0,.2,0h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0q0,0,0-.2l.3-.2.9-.3h.5c0,0,.3-.3.3-.3h.6c0,0,.2,0,.2,0h.5c0,0,0,.2,0,.2h.2c0,0,0,0,0,0h1.1c0,0,0,.2,0,.2h.4c0,0,.4-.3.4-.3h0v-.5c0,0,0,0,.2,0h.2c0,0,.3-.3.3-.3h0c0,0,.4-.3.4-.3h0c0,0,.2-.2.2-.2h.5c0,0,0-.2,0-.2h0c0,0,.2-.2.2-.2h0q0,0,.2,0h.2c0,0,.2.2.2.2h0c0,0,0-.2,0-.2h.2v-.2h0c0,0,0-.2,0-.2l.2-.2s0,0,0,0h.2c0,0,.2,0,.2,0h.6c0,0,0,0,0,0h.5c0,0,0,.2,0,.2l.2.2h0c0,0,0-.2,0-.2h0v-.7c0,0,0,0,0,0h0c0,0,.2-.3.2-.3h0c0,0,.2-.3.2-.3h0c0,0,.2-.6.2-.6v-.2c0,0,.2,0,.2,0l.2-.2h0c0,0,0-.2,0-.2h.7c0,0,0,0,0,0h.3c0,0,0-.2,0-.2h.2c0,0,.2-.2.2-.2h.2q0,0,0,0h.4c0,0,.2,0,.2,0h.4c0,0,0,0,0,0h.2s0,0,0,0l.2.2h0c0,0,.2.2.2.2h0c0,0,.2-.2.2-.2h.3l.2-.2h.2c0,0,.3-.3.3-.3h.3q0,0,0,0h0q0,0,0,.2v.2c0,0,.2,0,.2,0h.2v-.2c0,0,.4-.4.4-.4l.2-.2h0c0,0,0-.2,0-.2h.2c0,0,.2-.2.2-.2h.2c0,0,.2,0,.2,0h.3v-.2s0,0,0,0l.2-.2.2-.2h0v-.2h-.2c0,0-.3-.2-.3-.2h-.9c0,0-.2-.3-.2-.3h-.2c0,0,0,0,0,0h-.2c0,0-.2.2-.2.2h-1c0,0-.2-.2-.2-.2h0l-.2-.2h0v.2l-.3.3h0c0,0-.2.2-.2.2h-.6c0,0,0,0,0,0h-.6c0,0,0,.2,0,.2h-.2c0,0-.2,0-.2,0h-.6c0,0-.2,0-.2,0h-.6v.2h0c0,0,0,.2,0,.2h-.2c0,0-.2,0-.2,0h-1.3c0,0,0-.2,0-.2h-.6c0,0-.2-.4-.2-.4v-.2c0,0,0,0-.2,0v-.3c0,0-.2,0-.2,0,0,0,0,0-.2,0h-.4c0,0-.3,0-.3,0h-.2c0,0-.2.3-.2.3h-.4c0,0,0,0,0,0h-.3q0,0-.2,0h-.8c0,0-.3,0-.3,0h-.2c0,0-.2-.2-.2-.2h-.2c0,0-.2-.2-.2-.2h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0l-1-.2h-.3c0,0,0,0,0,0h-1.4c0,0-.2-.2-.2-.2,0,0,0,0,0,0h0c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0c0,0,0,0,0,0h-.3c0,0-.2,0-.2,0h0l-.5-.2h-.4s0,0,0,0h0c0,0,0,0,0,0h-.4c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2v.2h0c0,0-.3.3-.3.3h-.8c0,0-.3-.2-.3-.2h-.4c0,0-.2,0-.2,0h-.5c0,0-.2,0-.2,0h-.5c0,0,0-.2,0-.2v.2c0,0-.2,0-.2,0h0c0,.2,0,.2-.2.2h-.2l-.5-.2h-.4c0,0,0-.2,0-.2l-.4.2v.2c0,0-.3.3-.3.3,0,0,0,0,0,0h0c0,0,0,.3,0,.3h0q0,0,0,.2h-.2c0,0-.2.2-.2.2h-.7l-.5-.2h-.6v.4c0,0-.2,0-.2,0v.2c0,0-.2.2-.2.2h-.2c0,0-.2.2-.2.2h0c0,0,0,.2,0,.2h0c0,0,0,.3,0,.3h0v.2h0c0,.2,0,.2-.2.2h-.5c0,0,0,0,0-.2h0c0,0,0,0,0,0h-.4c0,0-.2-.2-.2-.2h0c0,0,0,0,0,0h-.2c0,0,0,0,0,0h-.7c0,0-.2-.2-.2-.2h0c0,0,0-.2,0-.2,0,0,0,0,0,0h-.2c0,0,0-.2,0-.2h0c0,0,0-.3,0-.3h0v-.2h-.7c0,0,0,0,0,0h-.3c0,0,0,0,0,0h0c0,0-.2-.2-.2-.2l-.2-.2c0,0,0,0,0,0h0c0,0,0,0,0,0h0l-.2-.2h0c0,0,0-.2,0-.2v-.2q0,0,0,0v-.2h-.4l-.7-.5h-.7q0,0,0,0h0c0,0,0-.2,0-.2v-.2c0,0,0,0,0,0h0c0,0-.5-.5-.5-.5h0v-.4c0,0,0-.2,0-.2h0c0,0,0-.2,0-.2h0v-.3h0c0,0,0-.4,0-.4v-.2h-.3q0,0-.2,0h-.2c0,0,0-.2,0-.2h0v-.2l-.2-.4h0c0,0,0-.2,0-.2l-.5-.6h0v-.2h0c0,0-.2-.3-.2-.3h-.2l-.3.2h-.3c0,0-.2.3-.2.3h0c0,0,0,.2,0,.2h0v.2h0c0,0,0,.3,0,.3h0c0,0,0,.4,0,.4v.4c0,0-.2,0-.2,0h0q0,0-.2,0h-.2c0,0,0,0,0-.2v-.2h-.4v.3c0,0-.2,0-.2,0v.3c0,0-.2,0-.2,0,0,0,0,0-.2,0s0,0-.2,0h0v-.8c0,0,0,0,0,0h0v-.5h0c0,0,0-.3,0-.3h0c0,0,0-.2,0-.2h-.3c0,0-.2-.3-.2-.3h-.7c0,0,0,0,0,0h-.3c0,0,0,0,0,0h-.8l-.4-.2h-.2c0,0-.2,0-.2,0h-.2c0,0,0,0,0,0l-.2-.2h0c0,0-.4-.2-.4-.2h-.5c0,0-.2.2-.2.2h-1c0,0-.4,0-.4,0h-.2c0,0-.4.2-.4.2v.2c0,0,0,0-.2,0h-.2c0,0-.2.2-.2.2h-.2c0,0-.2,0-.2,0l-.5.2h-1.3q0,0-.2,0h0c0,0,0,0,0,0h0l-.5.2h-.3c0,0,0,.2,0,.2v.2q0,0-.2.2h0l-.2.5-.2.3h0c0,0-.3.2-.3.2h0c0,0,0,.2,0,.2h0c0,0-.5.4-.5.4h-.2c0,0-.9.6-.9.6h-.2c0,0-.2,0-.2,0h0l-.5.2h-.6c0,0-.2,0-.2,0h-.2c0,0,0,.2,0,.2,0,0,0,0,0,0h-.2c0,0,0,.2,0,.2h-.3c0,0-.6,0-.6,0h0c0,0,0,0,0,0h-.8q0,0,0,0h0q0,0,0-.2h0c0,0,0,0,0,0h-.2q0,0-.2,0h0c0,0,0,0,0-.2h0c0,0,0,0,0,0h-.2c0,0-.2,0-.2,0h-.2c0,0,0,0,0,0h-.4c0,0-.2,0-.2,0h-.3c0,0,0,0,0,0h-.2q0,0-.2,0h-.4c0,0,0-.2,0-.2h-.5q0,0,0,0h0c0,0,0,0,0,0h-.9c0,0,0-.2,0-.2h0c0,0-.2-.3-.2-.3h0c0,0,0,0,0,0h-.7c0,0,0-.2,0-.2h-.5l-.5.2h0c0,0,0,0,0,0h-.5c0,0,0,0,0,0l-.3.2h0c0,0,0,.2,0,.2v.6c0,0,0,0-.2,0h0c0,0,0,0,0,0h-.3l-.2.2-.3.2-.3.2h0c0,0,0,.2,0,.2v.3c0,0,0,0,0,0h0v.8q0,0-.2.2h0v.3c0,0,0,0,0,0v.3c0,0,0,.2,0,.2h0c0,.2,0,.2,0,.2h0c0,0-.2.3-.2.3h0v.9c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v.4h0c0,0,.2.3.2.3v.2c0,0,0,0,0,0h0c0,0,.2.6.2.6v.4c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0c0,0,0,.3,0,.3v.2c0,0,0,.2,0,.2v.4c0,0,0,.2,0,.2h0c0,0,.2.6.2.6l.2.2h0c0,0,0,.6,0,.6l.2.5h0v.3h0c0,0,0,.2,0,.2h0c0,0,0,0,0,0h0c0,0,0,0,.2.2v.2h0v.2h0v1.2h0,0v.2h0c0,0,0,.3,0,.3h0c0,0,0,.4,0,.4l-.2.2h0v.2l-.2.2v.2c0,0-.2,0-.2,0h0c0,0-.4.6-.4.6l-.2.3-.2.3h0c0,0,0,.4,0,.4,0,0,0,0,0,0h0c0,0,0,.2,0,.2h0c0,0,0,.2,0,.2h0v.2l-.2.2h0v.2h0c0,0-.4.6-.4.6l-.4.3h0q0,0,0,.2h0c0,0,0,.3,0,.3h0v.3h0c0,0,.8,1.1.8,1.1ZM1192,914h0ZM1218.2,911.1h0ZM1218.2,911.1h0ZM1188.6,907.8h0ZM1188.5,907.8h0ZM1240.1,896.9h0Z"/>
        <path id="BAH" aria-label="Bahamas" class="cls-2" d="M1079.6,814.7l2.5-5v-5h5l2.5,7.4v5l5,5v5h-5l-5-9.9-5-2.5ZM1094.6,822.1l-5-5v-4.9l-2.5-7.5h0c0,0-5.2,0-5.2,0v5l-2.5,4.9h0c0,0,5,2.6,5,2.6l4.9,9.9h0c0,0,5.2,0,5.2,0v-5h.2ZM1084.7,817.1l-4.9-2.4,2.4-4.8v-4.9h4.7l2.4,7.3v5l5,5v4.8h-4.7l-4.9-10ZM1069.7,787.5l5,2.5,7.4-2.5h5v-2.5h-17.3v2.5h0ZM1082.1,787.6h5.1v-2.7h-17.6v2.7l5,2.5h0l7.5-2.5ZM1069.9,785.1h17.1v2.2h-4.8l-7.4,2.5-4.8-2.4v-2.3h0ZM1104.4,819.7l2.5,7.4,5,2.5,7.4,2.5v-2.5l-7.4-2.5-5-7.4-2.5-2.5v2.5ZM1119.4,829.5l-7.5-2.5-4.9-7.4-2.7-2.7v2.8l2.5,7.5h0l5,2.5,7.4,2.5h.2c0,0,0-2.7,0-2.7ZM1104.5,819.6v-2.2l2.2,2.2,5,7.4h0l7.4,2.5v2.2l-7.2-2.4-4.9-2.5-2.5-7.2ZM1089.5,802.3l2.5,2.5,2.5-5-5-5v7.5ZM1094.6,799.9h0l-5.2-5.3v7.8l2.6,2.6,2.6-5.1ZM1089.7,795.2l4.7,4.7-2.4,4.7-2.3-2.3v-7.1h0ZM1087.1,782.5h7.4l2.5,5v5h-2.5l5,5v-5h2.5v-5l-7.4-7.4h-7.4v2.4h0ZM1099.6,792.6h2.5v-5.1l-7.5-7.5h-7.6v2.7h7.5l2.4,4.9v4.8h-2.7l5.4,5.4v-5.2h0ZM1097.1,792.6v-5.1l-2.5-5h0c0,0-7.4,0-7.4,0v-2.2h7.2l7.4,7.4v4.8h-2.5v4.8l-4.5-4.5h2.3ZM1104.4,794.9v5h5l5,2.5v2.5h-2.5v2.5l5,2.5v-9.9l-9.9-5h-2.6ZM1116.9,799.8l-10-5h-2.7v5.2h5l4.9,2.4v2.3h-2.5v2.7l5.2,2.6v-10.2h0ZM1111.9,804.9h2.5v-2.7l-5-2.5h-4.9v-4.7h2.3l9.8,4.9v9.6l-4.7-2.4v-2.2h0ZM1116.8,814.7l2.5,5v2.5h5v-2.5l-7.4-7.4v2.4h0ZM1124.3,819.6l-7.5-7.5-.2-.2v2.8l2.5,5v2.6h5.2v-2.7ZM1119.4,819.7l-2.5-5v-2.1l7.2,7.2v2.3h-4.7v-2.4ZM1121.7,827.1l2.5,5v2.5l5,2.5v2.5h2.5v-2.6l-7.4-12.4-2.6,2.5ZM1131.7,837l-7.4-12.4h0c0,0-2.6,2.5-2.6,2.5h0c0,0,2.5,5.1,2.5,5.1v2.5l5,2.5v2.5h2.7v-2.7ZM1129.3,836.9l-5-2.5v-2.4l-2.4-4.9,2.3-2.3,7.3,12.2v2.3h-2.2v-2.4h0ZM1139,844.4v2.5h2.5l7.4-7.4v-5h-2.5l-2.5,5-4.9,4.9ZM1149,839.6h0v-5.2h-2.7l-2.5,5-4.9,4.9h0v2.7h2.7l7.4-7.4ZM1139.2,844.5l4.9-4.9,2.5-4.9h2.3v4.8l-7.4,7.4h-2.3v-2.4ZM1156.4,854.3v-2.5l2.5-5v-2.5h-2.5v2.5l-2.5,2.5h-2.5l-5,2.5v2.5h10ZM1156.5,851.9l2.5-4.9v-2.7h-2.7v2.5l-2.4,2.4h-2.4l-5,2.5h0v2.7h10.2v-2.5h0ZM1146.6,851.9l4.9-2.4h2.5l2.5-2.5h0v-2.4h2.2v2.3l-2.5,4.9v2.4h-9.7v-2.3h0Z"/>
      </g>
    </g>
  </svg>
      </div>
      <div id="details" class="details">
        <div class="loader-container" id="loader">
          <div class="loader">{% render 'loading-spinner' %}</div>
        </div>
        <h3 id="state-heading" class="font-neue-roman"></h3>
        <div id="locationWrapper">
          <div class="location">
            <h4 class="font-neue-roman state-location"></h4>
            <p class="font-neue-roman state-paragraph"></p>
            <p class="font-neue-roman"></p>
            <p class="font-neue-roman"></p>
            <p class="font-neue-roman"></p>
            <p><a href="#" class="font-neue-roman"></a></p>
          </div>
       </div>
      </div>
    </div>
  </div>
    </div>
  </section>
  
   <script>
  
    // Memory object and helper functions
window.countryStateMemory = {};

function clearLocationDetails() {
    const locationWrap = document.querySelector('#locationWrapper');
    const stateHeading = document.getElementById('state-heading');
    
    if (locationWrap) {
        locationWrap.innerHTML = '';
    }
    if (stateHeading) {
        stateHeading.innerHTML = '';
    }
}

function clearMapHighlights() {
    document.querySelectorAll('.map svg path, .map svg g').forEach(element => {
        element.classList.remove('activemap');
    });
}

  function showLoader() {
      const loader = document.getElementById('loader');
      if (loader) {
        loader.style.display = 'flex';
      }
    }
    
    function hideLoader() {
      const loader = document.getElementById('loader');
      if (loader) {
        loader.style.display = 'none';
      }
    }
  
      // Update country change handler
      document.getElementById('country').addEventListener('change', function(event) {
        const selectedValue = event.target.value;
        const canadaMap = document.getElementById('canada-map');
        const usaMap = document.getElementById('usa-map');
        const stateDropdown = document.getElementById('state');
    
        console.log('Country selected:', selectedValue);
        
        // Store current state before changing countries
        const currentState = stateDropdown.value;
        const previousCountry = usaMap.classList.contains('activemap') ? 'US' : 'CA';
        
        if (currentState && previousCountry) {
            window.countryStateMemory[previousCountry] = currentState;
        }
        
        // Clear details and highlights when changing countries
        clearLocationDetails();
        clearMapHighlights();
        
        if (selectedValue === 'US') {
            usaMap.classList.add('activemap');
            canadaMap.classList.remove('activemap');
        } else if (selectedValue === 'CA') {
            canadaMap.classList.add('activemap');
            usaMap.classList.remove('activemap');
        }
    
        setTimeout(() => {
            const selectedOption = event.target.options[event.target.selectedIndex];
            const metaobjectId = selectedOption.getAttribute('country-meta-id');
            if (metaobjectId) {
                stateDropdown.innerHTML = '';
                fetchMetaobjectData(metaobjectId);
            } else {
                console.error('Metaobject ID is missing or invalid');
            }
        }, 100);
    });
            
   </script>
  
          <script>
            // Common function to update any map
  function updateMap(mapId, selectedValue) {
      // First remove active class from all paths and groups in both maps
      document.querySelectorAll('.map svg path, .map svg g').forEach(element => {
          element.classList.remove('activemap');
      });
  
      // Try to find the element either as a path or group
      let element = document.querySelector(`#${mapId} #${selectedValue}`);
      if (element) {
          element.classList.add('activemap');
      }
  }
        // Update tooltip handlers to work with both maps
  const tooltip = document.createElement('div');
  tooltip.classList.add('tooltip');
  document.body.appendChild(tooltip);
  
  // Combined tooltip handler for both maps
  document.querySelectorAll('.map svg#usa-map path, .map svg#canada-map g').forEach(element => {
      element.addEventListener('mouseover', function(event) {
          const label = event.currentTarget.getAttribute('aria-label');
          if (label) {
              tooltip.innerText = label;
              tooltip.style.display = 'block';
              tooltip.style.left = event.pageX + 'px';
              tooltip.style.top = event.pageY + 'px';
          }
      });
  
      element.addEventListener('mousemove', function(event) {
          tooltip.style.left = event.pageX + 'px';
          tooltip.style.top = event.pageY + 'px';
      });
  
      element.addEventListener('mouseout', function() {
          tooltip.style.display = 'none';
      });
  });
  
            
          </script>
  
  
          <script>
  
  
            // Update the click event handler
            document.querySelectorAll('.map svg#usa-map path, .map svg#canada-map g').forEach(element => {
                element.addEventListener('click', function(event) {
                    showLoader();
                    
                    const elementId = event.currentTarget.id;
    console.log('Clicked element ID:', elementId);
    
    // ADD THIS LINE - Store selection in memory
    const currentCountry = document.getElementById('country').value;
    if (currentCountry) {
        window.countryStateMemory[currentCountry] = elementId;
    }
                    
                    // Set the selected value in the dropdown
                    const dropdown = document.getElementById('state');
                    dropdown.value = elementId;
                    
                    // Trigger the change event programmatically
                    const changeEvent = new Event('change');
                    dropdown.dispatchEvent(changeEvent);
                    
                    // Update the map using the common function
                    const mapId = event.currentTarget.closest('svg').id;
                    updateMap(mapId, elementId);
                });
            });
  
            
          </script>
  
          <script>
  
      const query = `query PageContent{
       page(handle:"dealers"){
        metafields(identifiers:[{namespace:"custom", key:"countries"}]){
          id 
          type
          value
          references(first:100){
            edges{
              node{
                   ...on Metaobject{
                  id
                  type
                  fields{
                    key
                    value
                    references(first:100){
                      edges{
                        node{
                      ...on Metaobject {
                        id
                        type
                        fields{
                          key
                          value
                        }
                      }
                      }
                    }
                    }
                  }
                } 
              }
            }
          }
        }
          }
      }`;
  
      // This function should be called after the countries are loaded in the dropdown
      function setDefaultCountry() {
          const countrySelect = document.getElementById('country');
          if (countrySelect) {
              // Find the United States option
              for (let i = 0; i < countrySelect.options.length; i++) {
              if (countrySelect.options[i].value === 'US') {
                  countrySelect.selectedIndex = i;
                  break;
              }
              }
              
              // Trigger the change event to update the map
              const changeEvent = new Event('change');
              countrySelect.dispatchEvent(changeEvent);
          }
      }
  
      function appendCountriesState(response) {
      var countries = response.data.page.metafields[0].references.edges;
      const countryWrap = document.querySelector('#country');
      const stateWrap = document.querySelector('#state');
      countryWrap.innerHTML = '';
      stateWrap.innerHTML = '<option value="">State</option>';
      
      // Create a global state metadata map
      window.stateMetadataMap = {};
  
      for (let i = 0; i < countries.length; i++) {
          var country = countries[i].node;
          var countryMetaId = country.id;
          var countryNameField = country.fields.find(field => field.key === 'country_name');
          var countryCodeField = country.fields.find(field => field.key === 'country_code');
          
          if (countryNameField && countryCodeField) {
              var countryHtml = `<option value='${countryCodeField.value}' country-meta-id='${countryMetaId}'>${countryNameField.value}</option>`;
              countryWrap.insertAdjacentHTML('beforeend', countryHtml);
          }
  
          // Create an array to hold all states for sorting
          let statesArray = [];
          var states = countries[i].node.fields[2].references.edges;
          
          for (let j = 0; j < states.length; j++) {
              var stateObj = states[j].node;
              var stateMetaId = stateObj.id;
              var stateName = stateObj.fields.find(field => field.key === 'state_name');
              var stateCode = stateObj.fields.find(field => field.key === 'state_code');
              
              if (stateName && stateCode) {
                  // Store metadata in the global map
                  window.stateMetadataMap[stateCode.value] = stateMetaId;
                  
                  // Add to states array instead of directly to DOM
                  statesArray.push({
                      name: stateName.value,
                      code: stateCode.value,
                      metaId: stateMetaId
                  });
              }
          }
  
          // Sort states array alphabetically by name
          statesArray.sort((a, b) => a.name.localeCompare(b.name));
  
          // Now append sorted states to the dropdown
          statesArray.forEach(state => {
              var stateHtml = `<option value='${state.code}' data-meta-id='${state.metaId}'>${state.name}</option>`;
              stateWrap.insertAdjacentHTML('beforeend', stateHtml);
          });
      }
  
      // Set United States as the default country
      setDefaultCountry();
  }
            
      function apiCall(query) {
    
      return fetch(`${window.Shopify.routes.root}api/graphql.json`, 
          { method: 'POST', 
            headers: { 'Content-Type': 'application/graphql', 
                       "Access-Control-Origin": "*", 
                       'X-Shopify-Storefront-Access-Token': window.shopifyStorefrontAccessTokens[window.location.origin] 
                     },
            "body": query 
          })
            .then(response => response.json()); }
      
            apiCall(query).then(response => {
              appendCountriesState(response);
              console.log(response, "response");
            });
  
  
                const stateWrap = document.querySelector('#state');
        document.getElementById('country').addEventListener('change', function(event) {
          setTimeout(() => {
              const selectedOption = event.target.options[event.target.selectedIndex];
              const metaobjectId = selectedOption.getAttribute('country-meta-id');
                  if (metaobjectId) {
                      stateWrap.innerHTML = '';
                      fetchMetaobjectData(metaobjectId);
                  } else {
                      console.error('Metaobject ID is missing or invalid');
                  }
            
            }, 100);
        });
  
            
        // Add logging to state change handler
        // Update the state change handler
  document.getElementById('state').addEventListener('change', function(event) {
      showLoader(); 
     // ADD THIS - Store the selected state for current country
     const currentCountry = document.getElementById('country').value;
     const selectedState = event.target.value;
     
     if (selectedState && currentCountry) {
         window.countryStateMemory[currentCountry] = selectedState;
     } else if (!selectedState && currentCountry) {
         delete window.countryStateMemory[currentCountry];
         clearLocationDetails();
         clearMapHighlights();
         hideLoader();
         return;
     }

      setTimeout(() => {
          const selectedValue = event.target.value;
          const metaId = window.stateMetadataMap[selectedValue];
          
          const selectElement = document.getElementById('country');
          const currentValue = selectElement.value;
  
          // Use the common update function for either map
          if (currentValue === 'US') {
              updateMap('usa-map', selectedValue);
          } else if (currentValue === 'CA') {
              updateMap('canada-map', selectedValue);
          }
  
          const selectedText = event.target.options[event.target.selectedIndex].text;
          const targetElement = document.getElementById('state-heading');
          targetElement.innerHTML = selectedText;
  
          if (metaId) {
              fetchMetaobjectDataLocations(metaId);
          } else {
              console.error('Metaobject ID not found for state:', selectedValue);
              hideLoader();
          }
      }, 1000);
  });
  
  function updateUSAMap(selectedValue) {
      const paths = document.querySelectorAll('.map svg#usa-map path');
      paths.forEach(path => path.classList.remove('activemap'));
      const matchingPath = document.getElementById(selectedValue);
      if (matchingPath) {
          matchingPath.classList.add('activemap');
      }
  }
  
  function updateCanadaMap(selectedValue) {
      const paths = document.querySelectorAll('.map svg#canada-map g');
      paths.forEach(path => path.classList.remove('activemap'));
      const matchingPath = document.getElementById(selectedValue);
      if (matchingPath) {
          matchingPath.classList.add('activemap');
      }
  }
  
  
  function renderRichTextContent(node) {
      if (!node) return '';
  
      switch (node.type) {
          case 'text':
              let content = node.value;
              // Handle bold text
              if (node.bold) {
                  content = `<strong>${content}</strong>`;
              }
              // Handle italic text if needed
              if (node.italic) {
                  content = `<em>${content}</em>`;
              }
              return content;
  
          case 'paragraph':
              const paragraphContent = node.children
                  .map(child => renderRichTextContent(child))
                  .join('');
              return `<p>${paragraphContent}</p>`;
  
          case 'heading':
              // Get heading level (default to h1 if not specified)
              const level = node.level || 1;
              // Ensure level is between 1 and 6
              const safeLevel = Math.max(1, Math.min(6, level));
              const headingContent = node.children
                  .map(child => renderRichTextContent(child))
                  .join('');
              return `<h${safeLevel}>${headingContent}</h${safeLevel}>`;
  
          case 'anchor':
            case 'link':
                const linkContent = node.children
                    .map(child => renderRichTextContent(child))
                    .join('');
                
                let href = linkContent || '#';
                
                // If the text looks like a URL but doesn't have protocol, add https://
                if (href !== '#' && href.includes('.') && !href.startsWith('http://') && !href.startsWith('https://') && !href.startsWith('mailto:') && !href.startsWith('tel:')) {
                    href = `https://${href}`;
                }
                
                // Force new tab for external links
                const target = ' target="_blank" rel="noopener noreferrer"';
                
                return `<a href="${escapeHtml(href)}"${target}>${linkContent}</a>`;
  
          default:
              return '';
      }
  }
  
  
  // Helper function to escape HTML special characters
  function escapeHtml(unsafe) {
      return unsafe
          .replace(/&/g, "&amp;")
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;")
          .replace(/"/g, "&quot;")
          .replace(/'/g, "&#039;");
  }
  
        function fetchMetaobjectDataLocations(metaobjectId) {
          console.log('Starting fetchMetaobjectDataLocations with ID:', metaobjectId);
      if (!metaobjectId) {
          console.error('No metaobject ID provided to fetchMetaobjectDataLocations');
          hideLoader();
          return;
      }
  
      const getResOnClick = `
      query MetaobjectQuery($id: ID!) {
          node(id: $id) {
              ... on Metaobject {
                  type
                  fields {
                      key
                      value
                      type
                  }
              }
          }
      }`;
  
      const getLocationDetails = `
      query LocationQuery($id: ID!) {
          node(id: $id) {
              ... on Metaobject {
                  fields {
                      key
                      value
                  }
              }
          }
      }`;
  
      const body = JSON.stringify({
          query: getResOnClick,
          variables: { id: metaobjectId }
      });
  
      fetch(`${window.Shopify.routes.root}api/graphql.json`, {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json',
              'X-Shopify-Storefront-Access-Token': window.shopifyStorefrontAccessTokens[window.location.origin]
          },
          body: body
      })
      .then(response => response.json())
      .then(data => {
          console.log('Initial Response:', data);
          
          // Find the office_locations field
          const officeLocationsField = data.data?.node?.fields?.find(field => 
              field.key === 'office_locations'
          );
  
          if (!officeLocationsField?.value) {
              throw new Error('No office locations found');
          }
  
          // Fetch the location details using the reference ID
          const locationBody = JSON.stringify({
              query: getLocationDetails,
              variables: { id: officeLocationsField.value }
          });
  
          return fetch(`${window.Shopify.routes.root}api/graphql.json`, {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json',
                  'X-Shopify-Storefront-Access-Token': window.shopifyStorefrontAccessTokens[window.location.origin]
              },
              body: locationBody
          });
      })
      .then(response => response.json())
      .then(locationData => {
          console.log('Location Details:', locationData);
  
          const locationWrap = document.querySelector('#locationWrapper');
          const fields = locationData.data?.node?.fields;
          
          if (!fields || fields.length === 0) {
              locationWrap.innerHTML = '<div class="location"><p>No location details available.</p></div>';
              return;
          }
  
          const locationTitle = fields.find(field => field.key === 'location_title')?.value;
          const locationDetails = fields.find(field => field.key === 'locations_details')?.value;
  
          if (locationDetails) {
              try {
                  const parsedData = JSON.parse(locationDetails);
                  let htmlContent = parsedData.children.map(renderRichTextContent).join('');
                  
                  const locationHtml = `
                      <div class="location">
                          ${locationTitle ? `<h4 class="state-location">${locationTitle}</h4>` : ''}
                          ${htmlContent}
                      </div>
                  `;
                  locationWrap.innerHTML = locationHtml;
              } catch (e) {
                  console.error('Error parsing location details:', e);
                  locationWrap.innerHTML = '<div class="location"><p>Error parsing location data.</p></div>';
              }
          } else {
              locationWrap.innerHTML = '<div class="location"><p>No location details found.</p></div>';
          }
          hideLoader();
  
      })
      .catch(error => {
          console.error('Error in location fetch process:', error);
          const locationWrap = document.querySelector('#locationWrapper');
          locationWrap.innerHTML = '<div class="location"><p>Error loading location data.</p></div>';
          hideLoader();
      });
  }
  function fetchMetaobjectData(metaobjectId) {
    const selectedCountry = document.getElementById('country').value;
    let regionLabel = 'Province';

    // Change label based on country selection
    if (selectedCountry === 'US') {
        regionLabel = 'State';
    } else if (selectedCountry === 'CA') {
        regionLabel = 'Province';
    }
    
    const getResOnClick = `
      query MetaobjectQuery($id: ID!) {
        node(id: $id) {
            ... on Metaobject {
                fields {
                    key
                    value
                    references(first: 100) {
                        nodes {
                            ... on Metaobject {
                                id
                                fields {
                                    key
                                    value
                                }
                            }
                        }
                    }
                }
            }
        }
      }
    `;

    const body = JSON.stringify({
        query: getResOnClick,
        variables: { id: metaobjectId }
    });

    fetch(`${window.Shopify.routes.root}api/graphql.json`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-Shopify-Storefront-Access-Token': window.shopifyStorefrontAccessTokens[window.location.origin]
        },
        body: body
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        if (!data?.data?.node?.fields?.[2]?.references?.nodes) {
            console.log('No state data found');
            const stateWrap = document.querySelector('#state');
            stateWrap.innerHTML = '<option value="">No states available</option>';
            return;
        }

        const getStates = data.data.node.fields[2].references.nodes;
        const stateWrap = document.querySelector('#state');
        stateWrap.innerHTML = `<option value="">${regionLabel}</option>`;

        // Create array for sorting
        let statesArray = [];

        for (let i = 0; i < getStates.length; i++) {
            const getState = getStates[i];
            if (!getState?.fields) continue;

            const stateCode = getState.fields.find(field => field.key === 'state_code');
            const stateName = getState.fields.find(field => field.key === 'state_name');

            if (stateName?.value && stateCode?.value) {
                statesArray.push({
                    name: stateName.value,
                    code: stateCode.value,
                    metaId: getState.id
                });
                
                // IMPORTANT: Update the global state metadata map HERE
                window.stateMetadataMap[stateCode.value] = getState.id;
            }
        }

        // Sort states alphabetically
        statesArray.sort((a, b) => a.name.localeCompare(b.name));

        // Append sorted states to dropdown
        statesArray.forEach(state => {
            const stateHtml = `<option value='${state.code}' data-state-meta-id='${state.metaId}'>${state.name}</option>`;
            stateWrap.insertAdjacentHTML('beforeend', stateHtml);
        });

        // NOW restore previous state (after metadata map is populated)
        const previouslySelectedState = window.countryStateMemory[selectedCountry];
        if (previouslySelectedState) {
            console.log('Restoring previous state:', previouslySelectedState);
            
            // Set the dropdown value
            stateWrap.value = previouslySelectedState;
            
            // Update the map highlight
            updateMap(selectedCountry === 'US' ? 'usa-map' : 'canada-map', previouslySelectedState);
            
            // Update the heading
            const selectedOption = stateWrap.options[stateWrap.selectedIndex];
            if (selectedOption && selectedOption.text !== regionLabel) {
                const targetElement = document.getElementById('state-heading');
                targetElement.innerHTML = selectedOption.text;
                
                // Get metadata ID and fetch location details
                const metaId = window.stateMetadataMap[previouslySelectedState];
                console.log('Meta ID for previous state:', metaId);
                
                if (metaId) {
                    showLoader();
                    fetchMetaobjectDataLocations(metaId);
                } else {
                    console.error('No metadata found for state:', previouslySelectedState);
                }
            }
        }
    })
    .catch(error => {
        console.error('Error fetching metaobject:', error);
        const stateWrap = document.querySelector('#state');
        stateWrap.innerHTML = '<option value="">Error loading states</option>';
    });
}
  
  </script>
  
  {% schema %}
  {
    "name": "Sales Representatives Map",
    "settings": [
      {
        "type": "text",
        "id": "heading",
        "label": "Heading",
        "default": "Sales Representatives"
      }
    ],
    "presets": [
      {
        "name": "Sales Representatives",
        "category": "Custom Sections",
        "settings": {
          "heading": "Sales Representatives Map"
        }
      }
    ]
  }
  {% endschema %}